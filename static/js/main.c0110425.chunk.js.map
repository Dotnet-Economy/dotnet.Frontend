{"version":3,"sources":["components/api-authorization/ApiAuthorizationConstants.js","components/api-authorization/AuthorizeService.js","components/Constants.js","components/NavMenu.js","components/Footer.js","images/bg.png","components/Layout.js","components/Home.js","components/form/ItemForm.js","components/form/ItemModal.js","components/form/GrantItemForm.js","components/form/GrantItemModal.js","components/Catalog.js","components/Inventory.js","components/form/UserForm.js","components/form/UserModal.js","images/inventory-bag.png","components/Users.js","components/form/PurchaseForm.js","components/form/PurchaseModal.js","components/Store.js","components/api-authorization/AuthorizeRoute.js","components/api-authorization/Login.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["QueryParameterNames","LogoutActions","LoginActions","prefix","AuthorizationPaths","DefaultLoginRedirectPath","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","AuthorizeService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","a","this","getUser","user","profile","ensureUserManagerInitialized","userManager","access_token","state","signinSilent","createArguments","silentUser","updateState","success","console","log","Error","signinPopup","popUpUser","message","error","signinRedirect","redirect","url","signinCallback","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","hostAndPort","window","location","origin","settings","authority","IDENTITY_SERVICE_URL","client_id","redirect_uri","response_type","scope","post_logout_redirect_uri","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","removeUser","authService","ApplicationPaths","NavMenu","props","isAuthenticated","userName","role","_subscription","subscribe","populateState","unsubscribe","Promise","all","setState","name","Navbar","bg","expand","Container","Brand","as","Link","to","style","styles","navBarText","Toggle","Collapse","id","checkAuthAndRenderMenuItems","authenticatedView","anonymousView","loginPath","Nav","className","storeAndInventoryItems","profileAndLogoutItems","profilePath","logoutPath","pathname","local","Component","displayName","color","fontWeight","Footer","Layout","backgroundImage","bgImage","backgroundSize","height","paddingTop","paddingBottom","fontSize","children","Home","adminView","devOnlyLinks","ItemForm","description","price","alertVisible","validated","onChange","e","target","value","submitNew","preventDefault","currentTarget","checkValidity","stopPropagation","createItem","submitEdit","updateItem","showAlert","alertMessage","alertColor","item","getAccessToken","token","fetch","CATALOG_ITEMS_API_URL","method","headers","body","JSON","stringify","parseFloat","then","ok","json","errorData","title","addItemToState","toggle","catch","err","updateItemIntoState","Form","noValidate","onSubmit","Group","Label","htmlFor","Control","type","required","Feedback","Button","variant","Alert","marginTop","show","React","ItemModal","modal","previous","button","isNew","onClick","minWidth","Modal","onHide","Header","closeButton","Body","GrantItemForm","userId","quantity","submitGrant","grantItem","INVENTORY_ITEMS_API_URL","catalogItemId","parseInt","GrantItemModal","Catalog","items","populateItems","deleteItemFromState","updated","loading","loadedSuccess","returnedItems","confirm","res","alert","paddingLeft","Row","Col","Table","striped","bordered","hover","textAlign","colSpan","align","deleteItem","contents","renderItemsTable","Inventory","cameFromUsersPage","sub","hidden","history","goBack","username","UserForm","email","okubo","updateUser","USERS_API_URL","updateUserIntoState","label","UserModal","Users","populateUsers","deleteUserFromState","users","Image","src","inventoryLogo","deleteUser","renderUsersTable","PurchaseForm","isLoading","buttonDisabled","connection","HubConnectionBuilder","withUrl","TRADING_SERVICE_URL","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","submitPurchase","purchaseItem","onPurchaseStatusReceived","currentState","errorMessage","autoDismiss","setTimeout","on","start","idempotencyId","uuidv4","fetchRetry","tries","PURCHASE_API_URL","itemId","triesLeft","readOnly","disabled","Spinner","animation","size","PurchaseModal","Store","userOkubo","STORE_API_URL","padding","margin","xs","ownedQuantity","AuthorizeRoute","ready","authenticated","authenticationChanged","populateAuthenticationState","link","document","createElement","href","path","returnUrl","protocol","host","search","hash","redirectUrl","encodeURI","component","rest","render","action","login","getReturnUrl","processLoginCallback","URLSearchParams","get","redirectToProfile","redirectToRegister","signIn","result","navigateToReturnUrl","completeSignIn","fromQuery","startsWith","redirectToApiAuthorizationPath","apiAuthorizationPath","replace","Logout","isReady","logout","processLogoutCallback","signOut","completeSignOut","ApiAuthorizationRoutes","loginAction","logoutAction","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","getElementsByTagName","getAttribute","ReactDOM","basename","getElementById"],"mappings":"8UAEaA,EACA,YADAA,EAEF,UAGEC,EACK,kBADLA,EAEH,SAFGA,EAGA,aAGAC,EACJ,QADIA,EAEI,iBAFJA,EAGE,eAHFA,EAIF,UAJEA,EAKD,WAGNC,EAAS,kBAEFC,EAAqB,CAChCC,yBAA0B,IAC1BC,uBAAwBH,EACxBI,MAAM,GAAD,OAAKJ,EAAL,YAAeD,GACpBM,YAAY,GAAD,OAAKL,EAAL,YAAeD,GAC1BO,cAAc,GAAD,OAAKN,EAAL,YAAeD,GAC5BQ,SAAS,GAAD,OAAKP,EAAL,YAAeD,GACvBS,QAAQ,GAAD,OAAKR,EAAL,YAAeD,GACtBU,OAAO,GAAD,OAAKT,EAAL,YAAeF,GACrBY,UAAU,GAAD,OAAKV,EAAL,YAAeF,GACxBa,eAAe,GAAD,OAAKX,EAAL,YAAeF,GAC7Bc,qBAAsB,6BACtBC,mBAAoB,4BChCTC,EAAb,iDACIC,WAAa,GADjB,KAEIC,oBAAsB,EAF1B,KAGIC,MAAQ,KAHZ,KAIIC,kBAAmB,EAJvB,KAQIC,gBAAiB,EARrB,0FAUI,4BAAAC,EAAA,sEACuBC,KAAKC,UAD5B,cACUC,EADV,2BAEaA,GAFb,gDAVJ,kHAeI,4BAAAH,EAAA,0DACQC,KAAKJ,QAASI,KAAKJ,MAAMO,QADjC,yCAEeH,KAAKJ,MAAMO,SAF1B,uBAKUH,KAAKI,+BALf,uBAMuBJ,KAAKK,YAAYJ,UANxC,cAMUC,EANV,yBAOWA,GAAQA,EAAKC,SAPxB,gDAfJ,yHAyBI,4BAAAJ,EAAA,sEACUC,KAAKI,+BADf,uBAEuBJ,KAAKK,YAAYJ,UAFxC,cAEUC,EAFV,yBAGWA,GAAQA,EAAKI,cAHxB,gDAzBJ,iHAuCI,WAAaC,GAAb,iBAAAR,EAAA,sEACUC,KAAKI,+BADf,gCAGiCJ,KAAKK,YAAYG,aAAaR,KAAKS,mBAHpE,cAGcC,EAHd,OAIQV,KAAKW,YAAYD,GAJzB,kBAKeV,KAAKY,QAAQL,IAL5B,qCAQQM,QAAQC,IAAI,gCAAZ,MARR,WAWgBd,KAAKF,eAXrB,uBAYsB,IAAIiB,MAAM,uGAZhC,yBAeoCf,KAAKK,YAAYW,YAAYhB,KAAKS,mBAftE,eAekBQ,EAflB,OAgBYjB,KAAKW,YAAYM,GAhB7B,kBAiBmBjB,KAAKY,QAAQL,IAjBhC,sCAmBuC,wBAAvB,KAAWW,QAnB3B,0CAqBuBlB,KAAKmB,MAAM,gCArBlC,QAsBwBnB,KAAKF,gBACbe,QAAQC,IAAI,+BAAZ,MAvBhB,mCA4BsBd,KAAKK,YAAYe,eAAepB,KAAKS,gBAAgBF,IA5B3E,iCA6BuBP,KAAKqB,YA7B5B,0CA+BgBR,QAAQC,IAAI,kCAAZ,MA/BhB,kBAgCuBd,KAAKmB,MAAL,OAhCvB,0EAvCJ,0HA6EI,WAAqBG,GAArB,eAAAvB,EAAA,+EAEcC,KAAKI,+BAFnB,uBAG2BJ,KAAKK,YAAYkB,eAAeD,GAH3D,cAGcpB,EAHd,OAIQF,KAAKW,YAAYT,GAJzB,kBAKeF,KAAKY,QAAQV,GAAQA,EAAKK,QALzC,yCAOQM,QAAQC,IAAI,kCAAZ,MAPR,kBAQed,KAAKmB,MAAM,mCAR1B,0DA7EJ,mHA8FI,WAAcZ,GAAd,SAAAR,EAAA,sEACUC,KAAKI,+BADf,oBAGYJ,KAAKF,eAHjB,sBAIkB,IAAIiB,MAAM,uGAJ5B,uBAOcf,KAAKK,YAAYmB,aAAaxB,KAAKS,mBAPjD,cAQQT,KAAKW,iBAAYc,GARzB,kBASezB,KAAKY,QAAQL,IAT5B,yCAWQM,QAAQC,IAAI,wBAAZ,MAXR,oBAakBd,KAAKK,YAAYqB,gBAAgB1B,KAAKS,gBAAgBF,IAbxE,iCAcmBP,KAAKqB,YAdxB,0CAgBYR,QAAQC,IAAI,2BAAZ,MAhBZ,kBAiBmBd,KAAKmB,MAAL,OAjBnB,kEA9FJ,2HAoHI,WAAsBG,GAAtB,eAAAvB,EAAA,sEACUC,KAAKI,+BADf,gCAG+BJ,KAAKK,YAAYsB,gBAAgBL,GAHhE,cAGcM,EAHd,OAIQ5B,KAAKW,YAAY,MAJzB,kBAKeX,KAAKY,QAAQgB,GAAYA,EAASC,OALjD,yCAOQhB,QAAQC,IAAR,4DAPR,kBAQed,KAAKmB,MAAL,OARf,0DApHJ,gFAgII,SAAYjB,GACRF,KAAKJ,MAAQM,EACbF,KAAKH,mBAAqBG,KAAKJ,MAC/BI,KAAK8B,sBAnIb,uBAsII,SAAUC,GAEN,OADA/B,KAAKN,WAAWsC,KAAK,CAAED,WAAUE,aAAcjC,KAAKL,wBAC7CK,KAAKL,oBAAsB,IAxI1C,yBA2II,SAAYuC,GACR,IAAMC,EAAoBnC,KAAKN,WAC1B0C,KAAI,SAACC,EAASC,GAAV,OAAoBD,EAAQJ,eAAiBC,EAAiB,CAAEK,OAAO,EAAMD,SAAU,CAAEC,OAAO,MACpGC,QAAO,SAAAH,GAAO,OAAsB,IAAlBA,EAAQE,SAC/B,GAAiC,IAA7BJ,EAAkBM,OAClB,MAAM,IAAI1B,MAAJ,mDAAsDoB,EAAkBM,SAGlFzC,KAAKN,WAAWgD,OAAOP,EAAkB,GAAGG,MAAO,KAnJ3D,+BAsJI,WACI,IAAK,IAAIK,EAAI,EAAGA,EAAI3C,KAAKN,WAAW+C,OAAQE,IAAK,EAE7CZ,EADiB/B,KAAKN,WAAWiD,GAAGZ,eAxJhD,6BA6JI,SAAgBxB,GACZ,MAAO,CAAEqC,sBAAsB,EAAMf,KAAMtB,KA9JnD,mBAiKI,SAAMW,GACF,MAAO,CAAE2B,OAAQC,EAA2BC,KAAM7B,aAlK1D,qBAqKI,SAAQX,GACJ,MAAO,CAAEsC,OAAQC,EAA2BE,QAASzC,WAtK7D,sBAyKI,WACI,MAAO,CAAEsC,OAAQC,EAA2BG,YA1KpD,iFA6KI,qCAAAlD,EAAA,8DAC6B0B,IAArBzB,KAAKK,YADb,iDAKQ6C,EAAcC,OAAOC,SAASC,QAE9BC,EAAW,CACXC,UAAU,GAAD,OAAKJ,OAAOK,sBACrBC,UAAW,WACXC,aAAa,GAAD,OAAKR,GAAL,OAAmBtE,EAAmBK,eAClD0E,cAAe,OACfC,MAAM,oGACNC,yBAAwB,UAAMX,GAAN,OAAoBtE,EAAmBU,kBAG1DwE,sBAAuB,EAChCR,EAASS,6BAA8B,EACvCT,EAASU,UAAY,IAAIC,uBAAqB,CAC1CtF,ODnMmB,kBCsMvBqB,KAAKK,YAAc,IAAI6D,cAAYZ,GAEnCtD,KAAKK,YAAY8D,OAAOC,iBAAxB,sBAAyC,sBAAArE,EAAA,sEAC/B,EAAKM,YAAYgE,aADc,OAErC,EAAK1D,iBAAYc,GAFoB,4CAxB7C,gDA7KJ,4EA2MI,WAAwB,OAAO6C,MA3MnC,KA8MMA,EAAc,IAAI7E,EAET6E,IAEFxB,EAA6B,CACtCG,SAAU,WACVD,QAAS,UACTD,KAAM,QCxNGwB,EACE,WADFA,EAEI,aAFJA,EAGA,SAHAA,EAIA,S,OCGAC,EAAb,kDAIE,WAAYC,GACX,IAAD,8BACE,cAAMA,IAEDlE,MAAQ,CACXmE,iBAAiB,EACjBC,SAAU,KACVC,KAAM,MANV,EALF,qDAeE,WACC,IAAD,OACE5E,KAAK6E,cAAgBP,EAAYQ,WAAU,kBAAM,EAAKC,mBACtD/E,KAAK+E,kBAlBT,kCAqBE,WAEET,EAAYU,YAAYhF,KAAK6E,iBAvBjC,kEA0BE,kCAAA9E,EAAA,sEAEwCkF,QAAQC,IAAI,CAACZ,EAAYI,kBAAmBJ,EAAYrE,YAFhG,mCAESyE,EAFT,KAE0BxE,EAF1B,KAGEF,KAAKmF,SAAS,CACZT,kBACAC,SAAUzE,GAAQA,EAAKkF,KACvBR,KAAM1E,GAAQA,EAAK0E,OANvB,gDA1BF,0EAoCE,WAEE,OACE,iCACE,cAACS,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAAIC,MAAOC,EAAOC,WAA7C,4BACA,cAACV,EAAA,EAAOW,OAAR,CAAe,gBAAc,qBAC7B,cAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,mBAApB,SACGlG,KAAKmG,yCA7CpB,yCAqDE,WAEE,OAAKnG,KAAKO,MAAMmE,gBAKP1E,KAAKoG,oBAHLpG,KAAKqG,kBAzDlB,2BAgEE,WAEE,IAAMC,EAAS,UAAM1H,EAAmBG,OACxC,OAAQ,eAAC,WAAD,WACN,cAACwH,EAAA,EAAD,CAAKC,UAAU,UAAf,SACE,cAACD,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,oBAEF,cAACW,EAAA,EAAD,UACE,cAACA,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIU,EAAxB,0BAxER,+BA6EE,WAEE,MAAwB,UAApBtG,KAAKO,MAAMqE,KAEL,eAAC,WAAD,WACN,eAAC2B,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAIC,MAAOC,EAAOC,WAAzC,kBACC/F,KAAKyG,yBACN,cAACF,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIrB,EAA8BsB,MAAOC,EAAOC,WAApE,qBACA,cAACQ,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIrB,EAA4BsB,MAAOC,EAAOC,WAAlE,sBAEF,cAACQ,EAAA,EAAD,UACGvG,KAAK0G,6BAIiB,WAApB1G,KAAKO,MAAMqE,KAEV,eAAC,WAAD,WACN,eAAC2B,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,kBACC5F,KAAKyG,4BAER,cAACF,EAAA,EAAD,UACGvG,KAAK0G,6BAMF,cAAC,WAAD,UACL1G,KAAK0G,4BA5Gd,oCAiHE,WAEE,OAAQ,eAAC,WAAD,WACN,cAACH,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIrB,EAA4BsB,MAAOC,EAAOC,WAAlE,mBACA,cAACQ,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIrB,EAAgCsB,MAAOC,EAAOC,WAAtE,+BArHN,mCAyHE,WAEE,IAAMY,EAAW,UAAM/H,EAAmBO,SACpCyH,EAAa,CAAEC,SAAS,GAAD,OAAKjI,EAAmBQ,QAAUmB,MAAO,CAAEuG,OAAO,IAC/E,OAAQ,eAAC,WAAD,WACN,eAACP,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIe,EAAad,MAAOC,EAAOC,WAAnD,mBAAsE/F,KAAKO,MAAMoE,YACjF,cAAC4B,EAAA,EAAIZ,KAAL,CAAUD,GAAIC,IAAMC,GAAIgB,EAAYf,MAAOC,EAAOC,WAAlD,2BA/HN,GAA6BgB,aAAhBvC,EAEJwC,YAAcxC,EAAQY,KAkI/B,IAAMU,EAAS,CACbC,WAAY,CAAEkB,MAAO,QAASC,WAAW,SC1I9BC,EAAb,4JACE,WACE,OACE,wBAAQX,UAAU,+BAAlB,SACE,qBAAKA,UAAU,YAAf,8CAJR,GAA4BO,aCFb,MAA0B,+BCM5BK,EAAb,4JAGE,WACE,OACE,sBAAKvB,MAAO,CAAEwB,gBAAgB,OAAD,OAASC,EAAT,KAAqBC,eAAgB,QAASC,OAAQ,SAAnF,UACE,cAAC,EAAD,IACA,cAAChC,EAAA,EAAD,CAAWK,MAAO,CAAE4B,WAAY,OAAQC,cAAe,OAAQT,MAAO,QAASU,SAAU,QAAST,WAAY,QAA9G,SACGlH,KAAKyE,MAAMmD,WAEd,cAAC,EAAD,WAVR,GAA4Bb,aAAfK,EACJJ,YAAcI,EAAOhC,KCFvB,IAAMyC,EAAb,kDAIE,WAAYpD,GACX,IAAD,8BACE,cAAMA,IAEDlE,MAAQ,CACXmE,iBAAiB,EACjBC,SAAU,KACVC,KAAM,MANV,EALF,qDAeE,WACC,IAAD,OACE5E,KAAK6E,cAAgBP,EAAYQ,WAAU,kBAAM,EAAKC,mBACtD/E,KAAK+E,kBAlBT,kCAqBE,WAEET,EAAYU,YAAYhF,KAAK6E,iBAvBjC,kEA0BE,kCAAA9E,EAAA,sEAEwCkF,QAAQC,IAAI,CAACZ,EAAYI,kBAAmBJ,EAAYrE,YAFhG,mCAESyE,EAFT,KAE0BxE,EAF1B,KAGEF,KAAKmF,SAAS,CACZT,kBACAC,SAAUzE,GAAQA,EAAKkF,KACvBR,KAAM1E,GAAQA,EAAK0E,OANvB,gDA1BF,0EAoCE,WAEE,OACE,gCACE,8GACA,yDACA,+BACE,4CAAc,cAAC,IAAD,CAAMgB,GAAIrB,EAAV,sBACd,6CAAe,cAAC,IAAD,CAAMqB,GAAIrB,EAAV,0BACdvE,KAAK8H,eAEP9H,KAAK+H,oBA/Cd,uBAoDE,WAEE,GAAI/H,KAAKO,MAAMmE,iBAAuC,UAApB1E,KAAKO,MAAMqE,KAE3C,OAAQ,eAAC,WAAD,WACN,6CAAe,cAAC,IAAD,CAAMgB,GAAIrB,EAAV,wBACf,oDAAsB,cAAC,IAAD,CAAMqB,GAAIrB,EAAV,2BA1D9B,0BA+DE,WAEM,MAjER,GAA0BwC,aAAbc,EAEJb,YAAca,EAAKzC,K,iFCHP4C,G,4MAEjBzH,MAAQ,CACJ2F,GAAI,EACJd,KAAM,GACN6C,YAAa,GACbC,MAAO,GACPC,cAAc,EACdC,WAAW,G,EAWfC,SAAW,SAAAC,GAEP,EAAKnD,SAAL,gBAAiBmD,EAAEC,OAAOnD,KAAOkD,EAAEC,OAAOC,S,EAG9CC,UAAY,SAACH,GAETA,EAAEI,kBAG2B,IADhBJ,EAAEK,cACNC,gBAELN,EAAEO,kBAIF,EAAKC,aAGT,EAAK3D,SAAS,CAAEiD,WAAW,K,EAwC/BW,WAAa,SAAAT,GAETA,EAAEI,kBAG2B,IADhBJ,EAAEK,cACNC,gBAELN,EAAEO,kBAIF,EAAKG,aAGT,EAAK7D,SAAS,CAAEiD,WAAW,K,EAqC/Ba,UAAY,SAAC/H,GAET,EAAKiE,SAAS,CACV+D,aAAchI,EACdiI,WAAY,SACZhB,cAAc,K,uDA3HtB,WAEI,GAAInI,KAAKyE,MAAM2E,KACf,CACI,MAAyCpJ,KAAKyE,MAAM2E,KAA5ClD,EAAR,EAAQA,GAAId,EAAZ,EAAYA,KAAM6C,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,MAC/BlI,KAAKmF,SAAS,CAAEe,KAAId,OAAM6C,cAAaC,a,+DAyB/C,mCAAAnI,EAAA,sEAEwBuE,EAAY+E,iBAFpC,OAEUC,EAFV,OAGIC,MAAM,GAAD,OAAIpG,OAAOqG,uBAAyB,CACrCC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BK,KAAMC,KAAKC,UAAU,CACjBzE,KAAMpF,KAAKO,MAAM6E,KACjB6C,YAAajI,KAAKO,MAAM0H,YACxBC,MAAO4B,WAAW9J,KAAKO,MAAM2H,WAGhC6B,KAZL,uCAYU,WAAMnI,GAAN,eAAA7B,EAAA,yDAEG6B,EAASoI,GAFZ,gCAI0BpI,EAASqI,OAJnC,aAIQC,EAJR,OAKErJ,QAAQM,MAAM+I,GACR,IAAInJ,MAAJ,kCAAqCmJ,EAAUC,QANvD,gCASKvI,EAASqI,QATd,2CAZV,uDAuBKF,MAAK,SAAAX,GAEF,EAAK3E,MAAM2F,eAAehB,GAC1B,EAAK3E,MAAM4F,YAEdC,OAAM,SAAAC,GAEH,EAAKtB,UAAUsB,EAAIrJ,YAjC/B,gD,qHAsDA,mCAAAnB,EAAA,sEAEwBuE,EAAY+E,iBAFpC,OAEUC,EAFV,OAGIC,MAAM,GAAD,OAAIpG,OAAOqG,sBAAX,YAAoCxJ,KAAKO,MAAM2F,IAAM,CACtDuD,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BK,KAAMC,KAAKC,UAAU,CACjB3D,GAAIlG,KAAKO,MAAM2F,GACfd,KAAMpF,KAAKO,MAAM6E,KACjB6C,YAAajI,KAAKO,MAAM0H,YACxBC,MAAO4B,WAAW9J,KAAKO,MAAM2H,WAGhC6B,KAbL,uCAaU,WAAMnI,GAAN,eAAA7B,EAAA,yDAEG6B,EAASoI,GAFZ,gCAI0BpI,EAASqI,OAJnC,aAIQC,EAJR,OAKErJ,QAAQM,MAAM+I,GACR,IAAInJ,MAAJ,qCAAwCmJ,EAAUC,QAN1D,OASF,EAAK1F,MAAM4F,SACX,EAAK5F,MAAM+F,oBAAoB,EAAKjK,MAAM2F,IAVxC,2CAbV,uDAyBKoE,OAAM,SAAAC,GAEH,EAAKtB,UAAUsB,EAAIrJ,YA9B/B,gD,0EA2CA,WAEI,OAAO,eAACuJ,GAAA,EAAD,CAAMC,YAAU,EAACtC,UAAWpI,KAAKO,MAAM6H,UAAWuC,SAAU3K,KAAKyE,MAAM2E,KAAOpJ,KAAK+I,WAAa/I,KAAKyI,UAArG,UACH,eAACgC,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,OAApB,mBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,OAAO5F,KAAK,OAAOiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAM6E,KAAM6F,UAAQ,IAC/F,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,2CAEJ,eAACP,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,cAApB,0BACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,OAAO5F,KAAK,cAAciD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAM0H,iBAE5F,eAACwC,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,QAApB,oBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,QAAQiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAM2H,MAAO+C,UAAQ,IACnG,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,4CAEJ,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,kBAEA,cAACK,GAAA,EAAD,CAAOxF,MAAO,CAAEyF,UAAW,QAAUF,QAASpL,KAAKO,MAAM4I,WAAYoC,KAAMvL,KAAKO,MAAM4H,aAAtF,SACKnI,KAAKO,MAAM2I,sB,GA9JUsC,IAAMzE,WCDvB0E,G,4MACjBlL,MAAQ,CACJmL,OAAO,G,EAEXrB,OAAS,WACL,EAAKlF,UAAS,SAAAwG,GAAQ,MAAK,CACvBD,OAAQC,EAASD,W,4CAGzB,WACI,IACIvB,EAAQ,YACRyB,EAAS,GAYb,OAdc5L,KAAKyE,MAAMoH,OAIrB1B,EAAQ,WACRyB,EAAS,cAACT,EAAA,EAAD,CACLC,QAAQ,UACRU,QAAS9L,KAAKqK,OACdxE,MAAO,CAAEkG,SAAU,SAHd,kBAKTH,EAAS,cAACT,EAAA,EAAD,CACLC,QAAQ,UACRU,QAAS9L,KAAKqK,OAFT,kBAIN,eAAC,WAAD,WACFuB,EACD,eAACI,EAAA,EAAD,CAAOT,KAAMvL,KAAKO,MAAMmL,MAAOlF,UAAWxG,KAAKyE,MAAM+B,UAAWyF,OAAQjM,KAAKqK,OAA7E,UACI,cAAC2B,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SAA2BhC,IAC3B,cAAC6B,EAAA,EAAMI,KAAP,UACI,cAAC,GAAD,CACIhC,eAAgBpK,KAAKyE,MAAM2F,eAC3BI,oBAAqBxK,KAAKyE,MAAM+F,oBAChCH,OAAQrK,KAAKqK,OACbjB,KAAMpJ,KAAKyE,MAAM2E,mB,GAjCFrC,aCClBsF,G,4MAEjB9L,MAAQ,CACJ2F,GAAI,GACJoG,OAAQ,GACRC,SAAU,EACVpE,cAAc,EACdC,WAAW,G,EAWfC,SAAW,SAAAC,GAEP,EAAKnD,SAAL,gBAAiBmD,EAAEC,OAAOnD,KAAOkD,EAAEC,OAAOC,S,EAG9CgE,YAAc,SAAClE,GAEXA,EAAEI,kBAG2B,IADhBJ,EAAEK,cACNC,gBAELN,EAAEO,kBAIF,EAAK4D,YAGT,EAAKtH,SAAS,CAAEiD,WAAW,K,EAmC/Ba,UAAY,SAAC/H,GAET,EAAKiE,SAAS,CACV+D,aAAchI,EACdiI,WAAY,SACZhB,cAAc,K,uDAnEtB,WAEI,GAAInI,KAAKyE,MAAM2E,KACf,CACI,IAAQlD,EAAOlG,KAAKyE,MAAM2E,KAAlBlD,GACRlG,KAAKmF,SAAS,CAAEe,U,8DAyBxB,mCAAAnG,EAAA,sEAEwBuE,EAAY+E,iBAFpC,OAEUC,EAFV,OAGIC,MAAM,GAAD,OAAIpG,OAAOuJ,yBAA2B,CACvCjD,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BK,KAAMC,KAAKC,UAAU,CACjByC,OAAQtM,KAAKO,MAAM+L,OACnBK,cAAe3M,KAAKO,MAAM2F,GAC1BqG,SAAUK,SAAS5M,KAAKO,MAAMgM,cAGjCxC,KAZL,uCAYU,WAAMnI,GAAN,eAAA7B,EAAA,yDAEG6B,EAASoI,GAFZ,gCAI0BpI,EAASqI,OAJnC,aAIQC,EAJR,OAKErJ,QAAQM,MAAM+I,GACR,IAAInJ,MAAJ,oCAAuCmJ,EAAUC,QANzD,OASF,EAAK1F,MAAM4F,SATT,2CAZV,uDAuBKC,OAAM,SAAAC,GAEH,EAAKtB,UAAUsB,EAAIrJ,YA5B/B,gD,0EAyCA,WAEI,OAAO,eAACuJ,GAAA,EAAD,CAAMC,YAAU,EAACtC,UAAWpI,KAAKO,MAAM6H,UAAWuC,SAAU3K,KAAKwM,YAAjE,UACH,eAAC/B,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,SAApB,sBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,OAAO5F,KAAK,SAASiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAM+L,OAAQrB,UAAQ,IACnG,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,8CAEJ,eAACP,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,WAApB,uBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,WAAWiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAMgM,SAAUtB,UAAQ,IACzG,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,+CAEJ,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,mBAEA,cAACK,GAAA,EAAD,CAAOxF,MAAO,CAAEyF,UAAW,QAAUF,QAASpL,KAAKO,MAAM4I,WAAYoC,KAAMvL,KAAKO,MAAM4H,aAAtF,SACKnI,KAAKO,MAAM2I,sB,GAjGesC,IAAMzE,WCD5B8F,G,4MAEjBtM,MAAQ,CACJmL,OAAO,G,EAEXrB,OAAS,WAEL,EAAKlF,UAAS,SAAAwG,GAAQ,MAAK,CACvBD,OAAQC,EAASD,W,4CAGzB,WAEI,OAAO,eAAC,WAAD,WACH,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUU,QAAS9L,KAAKqK,OAAxC,mBACA,eAAC2B,EAAA,EAAD,CAAOT,KAAMvL,KAAKO,MAAMmL,MAAOlF,UAAWxG,KAAKyE,MAAM+B,UAAWyF,OAAQjM,KAAKqK,OAA7E,UACI,eAAC2B,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,mBAAiCnM,KAAKyE,MAAM2E,KAAKhE,QACjD,cAAC4G,EAAA,EAAMI,KAAP,UACI,cAAC,GAAD,CACI/B,OAAQrK,KAAKqK,OACbjB,KAAMpJ,KAAKyE,MAAM2E,mB,GApBGrC,aCG/B+F,GAAb,kDAGE,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAuBR2F,eAAiB,SAAAhB,GACf,EAAKjE,UAAS,SAAAwG,GAAQ,MAAK,CACzBoB,MAAM,GAAD,mBAAMpB,EAASoB,OAAf,CAAsB3D,SA1BZ,EA6BnBzI,YAAc,SAACuF,GACb,EAAK8G,iBA9BY,EAgCnBC,oBAAsB,SAAA/G,GACpB,IAAMgH,EAAU,EAAK3M,MAAMwM,MAAMvK,QAAO,SAAA4G,GAAI,OAAIA,EAAKlD,KAAOA,KAC5D,EAAKf,SAAS,CAAE4H,MAAOG,KAhCvB,EAAK3M,MAAQ,CAAEwM,MAAO,GAAII,SAAS,EAAMC,eAAe,GAFvC,EAHrB,qDAQE,WACEpN,KAAKgN,kBATT,kEAYE,mCAAAjN,EAAA,sEACsBuE,EAAY+E,iBADlC,OACQC,EADR,OAEEC,MAAM,GAAD,OAAIpG,OAAOqG,uBAAyB,CACvCE,QAAUJ,EAAa,CAAE,cAAgB,UAAhB,OAA2BA,IAAlC,KAEjBS,MAAK,SAAAnI,GACJ,OAAOA,EAASqI,UAEjBF,MAAK,SAAAsD,GAAa,OAAI,EAAKlI,SAAS,CAAE4H,MAAOM,EAAeF,SAAS,EAAOC,eAAe,OAC3F9C,OAAM,SAAAC,GACL1J,QAAQC,IAAIyJ,GACZ,EAAKpF,SAAS,CAAE4H,MAAO,GAAII,SAAS,EAAOC,eAAe,OAXhE,2CAZF,qHAuCE,WAAiBlH,GAAjB,sBAAAnG,EAAA,0DACwBoD,OAAOmK,QAAQ,oCADvC,gCAGwBhJ,EAAY+E,iBAHpC,OAGUC,EAHV,OAIIC,MAAM,GAAD,OAAIpG,OAAOqG,sBAAX,YAAoCtD,GAAM,CAC7CuD,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,MAG5BS,MAAK,SAAAwD,GACJ,EAAKN,oBAAoB/G,MAE1BoE,OAAM,SAAAC,GACL1J,QAAQC,IAAIyJ,GACZpH,OAAOqK,MAAM,iCAhBrB,2CAvCF,qFA4DE,SAAiBT,GAAQ,IAAD,OACtB,OAAO,eAACvH,EAAA,EAAD,CAAWK,MAAO,CAAE4B,WAAY,OAAQgG,YAAa,OAArD,UACL,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,uBAAOvH,UAAU,aAAjB,SACE,+BACE,sCACA,6CACA,uCACA,oBAAIX,MAAO,CAAEmI,UAAW,UAAxB,0BAGJ,iCACIjB,GAASA,EAAMtK,QAAU,EACzB,6BACE,oBAAIwL,QAAQ,IAAIC,MAAM,SAAtB,SAA+B,iDAE/BnB,EAAM3K,KAAI,SAAAgH,GAAI,OACd,+BACE,6BACGA,EAAKhE,OAER,6BACGgE,EAAKnB,cAER,6BACGmB,EAAKlB,QAER,oBAAIgG,MAAM,SAAV,SACE,gCACE,cAAC,GAAD,CACErC,OAAO,EACPzC,KAAMA,EACNoB,oBAAqB,EAAK7J,cAJ9B,eAMF,cAAC,GAAD,CACMyI,KAAMA,IAPV,eASF,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,SAASU,QAAS,kBAAM,EAAKqC,WAAW/E,EAAKlD,KAA7D,2BApBOkD,EAAKlD,gBA6B1B,cAACwH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,GAAD,CAAW9B,OAAO,EAAMzB,eAAgBpK,KAAKoK,0BA9GvD,oBAoHE,WACE,IAAIgE,EAAWpO,KAAKO,MAAM4M,QACtB,4BAAG,8CACHnN,KAAKO,MAAM6M,cACTpN,KAAKqO,iBAAiBrO,KAAKO,MAAMwM,OACjC,qDAEN,OACE,gCACE,oBAAI7G,GAAG,aAAP,2BACCkI,SA9HT,GAA6BrH,aAAhB+F,GACJ9F,YAAc8F,GAAQ1H,KCHxB,IAAMkJ,GAAb,kDAGE,WAAY7J,GAAQ,IAAD,8BACjB,cAAMA,IACDlE,MAAQ,CAAEwM,MAAO,GAAII,SAAS,EAAMC,eAAe,GAFvC,EAHrB,qDAQE,WACEpN,KAAKgN,kBATT,kEAYE,uCAAAjN,EAAA,yDAEMuM,EAAS,IAETtM,KAAKuO,oBAJX,gBAKIjC,EAAStM,KAAKyE,MAAMrB,SAASlD,KAAKgG,GALtC,sCAQuB5B,EAAYrE,UARnC,OAQUC,EARV,OASIoM,EAASpM,EAAKsO,IATlB,wBAYsBlK,EAAY+E,iBAZlC,QAYQC,EAZR,OAaEC,MAAM,GAAD,OAAIpG,OAAOuJ,wBAAX,mBAA6CJ,GAAU,CAC1D5C,QAAUJ,EAAa,CAAE,cAAgB,UAAhB,OAA2BA,IAAlC,KAEjBS,MAAK,SAAAnI,GAAQ,OAAIA,EAASqI,UAC1BF,MAAK,SAAAsD,GAAa,OAAI,EAAKlI,SAAS,CAAE4H,MAAOM,EAAeF,SAAS,EAAOC,eAAe,OAC3F9C,OAAM,SAAAC,GACL1J,QAAQC,IAAIyJ,GACZ,EAAKpF,SAAS,CAAE4H,MAAO,GAAII,SAAS,EAAOC,eAAe,OApBhE,iDAZF,oFAoCE,SAAiBL,GAAQ,IAAD,OACtB,OAAO,eAACvH,EAAA,EAAD,CAAWK,MAAO,CAAE4B,WAAY,OAAQgG,YAAa,OAArD,UACL,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAAd,UACE,uBAAOrH,UAAU,aAAjB,SACE,+BACE,sCACA,6CACA,+CAGJ,iCACIuG,GAASA,EAAMtK,QAAU,EACzB,6BACE,oBAAIwL,QAAQ,IAAIC,MAAM,SAAtB,SAA+B,iDAE/BnB,EAAM3K,KAAI,SAAAgH,GAAI,OACd,+BACE,6BACGA,EAAKhE,OAER,6BACGgE,EAAKnB,cAER,6BACGmB,EAAKmD,aARDnD,EAAKuD,2BAgB1B,cAACe,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACxC,EAAA,EAAD,CAAQlE,MAAM,UAAUwH,QAASzO,KAAKuO,oBAAqBzC,QAAS,kBAAM,EAAKrH,MAAMiK,QAAQC,UAA7F,oCAxEV,oBA8EE,WACE,IAAIP,EAAWpO,KAAKO,MAAM4M,QACtB,4BAAG,8CACHnN,KAAKO,MAAM6M,cACTpN,KAAKqO,iBAAiBrO,KAAKO,MAAMwM,OACjC,qDAEN,OACE,gCACE,qBAAI7G,GAAG,aAAP,UAAsBlG,KAAKuO,oBAAsBvO,KAAKyE,MAAMrB,SAASlD,KAAK0O,SAAW,KAArF,gBACCR,OAxFT,+BA6FE,WAEE,OADsC,MAA5BpO,KAAKyE,MAAMrB,SAASlD,SA9FlC,GAA+B6G,aAAlBuH,GACJtH,YAAcsH,GAAUlJ,K,aCDZyJ,G,4MAEjBtO,MAAQ,CACJ2F,GAAI,EACJ4I,MAAO,GACPC,MAAO,GACP5G,cAAc,EACdC,WAAW,G,EAUfC,SAAW,SAAAC,GAEP,EAAKnD,SAAL,gBAAiBmD,EAAEC,OAAOnD,KAAOkD,EAAEC,OAAOC,S,EAG9CO,WAAa,SAACT,GAEVA,EAAEI,kBAG2B,IADhBJ,EAAEK,cACNC,gBAELN,EAAEO,kBAIF,EAAKmG,aAGT,EAAK7J,SAAS,CAAEiD,WAAW,K,EAoC/Ba,UAAY,SAAC/H,GAET,EAAKiE,SAAS,CACV+D,aAAchI,EACdiI,WAAY,SACZhB,cAAc,K,uDApEtB,WAEI,GAAInI,KAAKyE,MAAMvE,KACf,CACI,MAA6BF,KAAKyE,MAAMvE,KAAhCgG,EAAR,EAAQA,GAAI4I,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,MACnB/O,KAAKmF,SAAS,CAAEe,KAAI4I,QAAOC,a,+DAyBnC,mCAAAhP,EAAA,sEAEwBuE,EAAY+E,iBAFpC,OAEUC,EAFV,OAGIC,MAAM,GAAD,OAAIpG,OAAO8L,cAAX,YAA4BjP,KAAKO,MAAM2F,IAAM,CAC9CuD,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BK,KAAMC,KAAKC,UAAU,CACjB3D,GAAIlG,KAAKO,MAAM2F,GACf4I,MAAO9O,KAAKO,MAAMuO,MAClBC,MAAOjF,WAAW9J,KAAKO,MAAMwO,WAGhChF,KAZL,uCAYU,WAAMnI,GAAN,eAAA7B,EAAA,yDAEG6B,EAASoI,GAFZ,gCAI0BpI,EAASqI,OAJnC,aAIQC,EAJR,OAKErJ,QAAQM,MAAM+I,GACR,IAAInJ,MAAJ,qCAAwCmJ,EAAUC,QAN1D,OASF,EAAK1F,MAAM4F,SACX,EAAK5F,MAAMyK,oBAAoB,EAAK3O,MAAM2F,IAVxC,2CAZV,uDAwBKoE,OAAM,SAAAC,GAEH,EAAKtB,UAAUsB,EAAIrJ,YA7B/B,gD,0EA0CA,WAEI,OAAO,eAACuJ,GAAA,EAAD,CAAMC,YAAU,EAACtC,UAAWpI,KAAKO,MAAM6H,UAAWuC,SAAU3K,KAAK+I,WAAjE,UACH,eAAC0B,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,QAApB,mBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQ5F,KAAK,QAAQ+J,MAAM,SAAS9G,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAMuO,MAAO7D,UAAQ,IACjH,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,4CAEJ,eAACP,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,QAApB,oBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,QAAQiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAMwO,MAAO9D,UAAQ,IACnG,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,4CAEJ,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,kBAEA,cAACK,GAAA,EAAD,CAAOxF,MAAO,CAAEyF,UAAW,QAAUF,QAASpL,KAAKO,MAAM4I,WAAYoC,KAAMvL,KAAKO,MAAM4H,aAAtF,SACKnI,KAAKO,MAAM2I,sB,GAjGUsC,IAAMzE,WCDvBqI,G,4MAEjB7O,MAAQ,CACJmL,OAAO,G,EAEXrB,OAAS,WAEL,EAAKlF,UAAS,SAAAwG,GAAQ,MAAK,CACvBD,OAAQC,EAASD,W,4CAGzB,WAGI,OAAO,eAAC,WAAD,WACH,cAACP,EAAA,EAAD,CACIC,QAAQ,UACRU,QAAS9L,KAAKqK,OAFlB,kBAGA,eAAC2B,EAAA,EAAD,CAAOT,KAAMvL,KAAKO,MAAMmL,MAAOlF,UAAWxG,KAAKyE,MAAM+B,UAAWyF,OAAQjM,KAAKqK,OAA7E,UACI,cAAC2B,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SANI,cAOJ,cAACH,EAAA,EAAMI,KAAP,UACI,cAAC,GAAD,CACI8C,oBAAqBlP,KAAKyE,MAAMyK,oBAChC7E,OAAQrK,KAAKqK,OACbnK,KAAMF,KAAKyE,MAAMvE,mB,GAxBF6G,aCHxB,OAA0B,0CCO5BsI,GAAb,kDAIE,WAAY5K,GACX,IAAD,8BACE,cAAMA,IAwBR9D,YAAc,SAACuF,GAEb,EAAKoJ,iBA3BP,EA6BAC,oBAAsB,SAAArJ,GAEpB,IAAMgH,EAAU,EAAK3M,MAAMiP,MAAMhN,QAAO,SAAAtC,GAAI,OAAIA,EAAKgG,KAAOA,KAC5D,EAAKf,SAAS,CAAEqK,MAAOtC,KA9BvB,EAAK3M,MAAQ,CAAEiP,MAAO,GAAIrC,SAAS,EAAMC,eAAe,GAF1D,EALF,qDAUE,WAEEpN,KAAKsP,kBAZT,kEAeE,mCAAAvP,EAAA,sEAEsBuE,EAAY+E,iBAFlC,OAEQC,EAFR,OAGEC,MAAM,GAAD,OAAIpG,OAAO8L,eAAiB,CAC/BvF,QAAUJ,EAAa,CAAE,cAAgB,UAAhB,OAA2BA,IAAlC,KAEjBS,MAAK,SAAAwD,GAAG,OAAIA,EAAItD,UAChBF,MAAK,SAAAwD,GAAG,OAAI,EAAKpI,SAAS,CAAEqK,MAAOjC,EAAKJ,SAAS,EAAOC,eAAe,OACvE9C,OAAM,SAAAC,GAEL1J,QAAQC,IAAIyJ,GACZ,EAAKpF,SAAS,CAAEqK,MAAO,GAAIrC,SAAS,EAAOC,eAAe,OAXhE,2CAfF,qHAuCE,WAAiBlH,GAAjB,sBAAAnG,EAAA,0DAEwBoD,OAAOmK,QAAQ,oCAFvC,gCAKwBhJ,EAAY+E,iBALpC,OAKUC,EALV,OAMIC,MAAM,GAAD,OAAIpG,OAAO8L,cAAX,YAA4B/I,GAAM,CACrCuD,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,MAG5BS,MAAK,SAAAwD,GAEJ,EAAKgC,oBAAoBrJ,MAE1BoE,OAAM,SAAAC,GACL1J,QAAQC,IAAIyJ,GACZpH,OAAOqK,MAAM,iCAnBrB,2CAvCF,qFA+DE,SAAiBgC,GAChB,IAAD,OACE,OAAO,cAAChK,EAAA,EAAD,CAAWK,MAAO,CAAE4B,WAAY,OAAQgG,YAAa,OAArD,SACL,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAAd,UACE,uBAAOrH,UAAU,aAAjB,SACE,+BACE,oCACA,uCACA,uCACA,2CACA,oBAAIX,MAAO,CAAEmI,UAAW,UAAxB,0BAGJ,iCACIwB,GAASA,EAAM/M,QAAU,EACzB,6BACE,oBAAIwL,QAAQ,IAAIC,MAAM,SAAtB,SAA+B,iDAE/BsB,EAAMpN,KAAI,SAAAlC,GAAI,OACd,+BACE,6BACGA,EAAKgG,KAER,6BACGhG,EAAK4O,QAER,6BACG5O,EAAK6O,QAER,6BACE,cAAC,IAAD,CAAMnJ,GAAI,CACRiB,SAAU,aACV3G,KAAMA,GAFR,SAIE,cAACuP,GAAA,EAAD,CAAOC,IAAKC,GAAenI,OAAQ,SAGvC,oBAAI0G,MAAM,SAAV,SACE,gCACE,cAAC,GAAD,CACEhO,KAAMA,EACNgP,oBAAqB,EAAKvO,cAH9B,eAKF,cAACwK,EAAA,EAAD,CAAQC,QAAQ,SAASU,QAAS,kBAAM,EAAK8D,WAAW1P,EAAKgG,KAA7D,2BAxBOhG,EAAKgG,oBApFhC,oBAwHE,WAEE,IAAIkI,EAAWpO,KAAKO,MAAM4M,QACtB,4BAAG,8CACHnN,KAAKO,MAAM6M,cACTpN,KAAK6P,iBAAiB7P,KAAKO,MAAMiP,OACjC,qDAEN,OACE,gCACE,oBAAItJ,GAAG,aAAP,mBACCkI,SAnIT,GAA2BrH,aAAdsI,GAEJrI,YAAcqI,GAAMjK,K,iCCHR0K,G,4MAEjBvP,MAAQ,CACJ2F,GAAI,EACJd,KAAM,GACN8C,MAAO,GACPqE,SAAU,EACVpE,cAAc,EACdgB,WAAY,GACZD,aAAc,GACd6G,WAAW,EACXC,gBAAgB,EAChB5H,WAAW,G,EAGf6H,YAAa,IAAIC,MACZC,QADQ,UACGhN,OAAOiN,oBADV,eAC4C,CAAEC,mBAAoB,kBAAM/L,EAAY+E,oBAC5FiH,yBACAC,iBAAiBC,KAASC,aAC1BC,Q,EAgBLrI,SAAW,SAAAC,GAEP,EAAKnD,SAAL,gBAAiBmD,EAAEC,OAAOnD,KAAOkD,EAAEC,OAAOC,S,EAG9CmI,eAAiB,SAACrI,GAEdA,EAAEI,kBAG2B,IADhBJ,EAAEK,cACNC,gBAELN,EAAEO,kBAIF,EAAK+H,eAGT,EAAKzL,SAAS,CAAEiD,WAAW,K,EA6D/ByI,yBAA2B,SAAChO,GAExBhC,QAAQC,IAAI,6BAA+B+B,EAAOiO,cAClD,EAAK3L,SAAS,CAAE4K,WAAW,IAEC,YAAxBlN,EAAOiO,cAEP,EAAK3L,SAAS,CACV+D,aAAc,mCAAqCrG,EAAOkO,aAC1D5H,WAAY,SACZ6G,gBAAgB,IAEpB,EAAK/G,WAAU,KAIf,EAAKxE,MAAM+F,oBAAoB,EAAKjK,MAAM2F,IAC1C,EAAKf,SAAS,CACV+D,aAAc,kCACdC,WAAY,YAEhB,EAAKF,WAAU,K,EAIvBA,UAAY,SAAC+H,GAET,EAAK7L,SAAS,CAAEgD,cAAc,IAAQ,WAE9B6I,GAEA7N,OAAO8N,YAAW,WAEd,EAAKxM,MAAM4F,WACZ,S,uDAhIf,WAEI,MAA4BrK,KAAKyE,MAAM2E,KAA/BlD,EAAR,EAAQA,GAAId,EAAZ,EAAYA,KAAM8C,EAAlB,EAAkBA,MAClBlI,KAAKmF,SAAS,CAAEe,KAAId,OAAM8C,UAE1BlI,KAAKiQ,WAAWiB,GAAG,wBAAyBlR,KAAK6Q,0BAEjD7Q,KAAKiQ,WAAWkB,QACX7G,OAAM,SAAAC,GAEH1J,QAAQC,IAAI,yB,iEA0BxB,4BAAAf,EAAA,sDAE0BoD,OAAOmK,QAAP,mBAA2BtN,KAAKO,MAAMgM,SAAtC,YAAkDvM,KAAKO,MAAM6E,KAA7D,gBAAyEpF,KAAKO,MAAM2H,MAAQlI,KAAKO,MAAMgM,SAAvG,cAGlBvM,KAAKmF,SAAS,CAAE6K,gBAAgB,EAAMD,WAAW,EAAM5H,cAAc,IACjEiJ,EAAgBC,eACpBrR,KAAKsR,WAAWF,EAAe,IAPvC,gD,qHAWA,WAAiBA,EAAeG,GAAhC,sBAAAxR,EAAA,sEAEwBuE,EAAY+E,iBAFpC,cAEUC,EAFV,yBAIWC,MAAM,GAAD,OAAIpG,OAAOqO,kBAAoB,CACvC/H,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,IAE/BK,KAAMC,KAAKC,UAAU,CACjB4H,OAAQzR,KAAKO,MAAM2F,GACnBqG,SAAUK,SAAS5M,KAAKO,MAAMgM,UAC9B6E,cAAeA,MAGlBrH,KAZE,uCAYG,WAAMnI,GAAN,eAAA7B,EAAA,yDAEG6B,EAASoI,GAFZ,gCAI0BpI,EAASqI,OAJnC,aAIQC,EAJR,OAKErJ,QAAQM,MAAM+I,GACR,IAAInJ,MAAJ,uCAA0CmJ,EAAUC,QAN5D,cASFtJ,QAAQC,IAAI,0CAA4Cc,EAASiB,QAT/D,kBAUKjB,EAASqI,QAVd,2CAZH,uDAwBFK,OAAM,SAAAC,GAEH,IAAImH,EAAYH,EAAQ,EACxB,OAAKG,EAYET,YAAW,kBAAM,EAAKK,WAAWF,EAAeM,KAAY,MAV/D,EAAKvM,SAAS,CACV+D,aAAcqB,EAAIrJ,QAClBiI,WAAY,SACZ6G,gBAAgB,EAChBD,WAAW,SAEf,EAAK9G,WAAU,QAvC/B,gD,6EAsFA,WAEI,OAAO,eAACwB,GAAA,EAAD,CAAMC,YAAU,EAACtC,UAAWpI,KAAKO,MAAM6H,UAAWuC,SAAU3K,KAAK2Q,eAAjE,UACH,eAAClG,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,QAApB,oBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,QAAQoD,MAAOxI,KAAKO,MAAM2H,MAAOyJ,UAAQ,OAE9E,eAAClH,GAAA,EAAKG,MAAN,WACI,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAQ,WAApB,uBACA,cAACL,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,WAAWiD,SAAUrI,KAAKqI,SAAUG,MAAOxI,KAAKO,MAAMgM,SAAUtB,UAAQ,IACzG,cAACR,GAAA,EAAKM,QAAQG,SAAd,CAAuBF,KAAK,UAA5B,+CAGJ,eAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAAS4G,SAAU5R,KAAKO,MAAMyP,eAA7D,UACKhQ,KAAKO,MAAMwP,UAAY,cAAC8B,GAAA,EAAD,CACpBnM,GAAG,OACHoM,UAAU,SACVC,KAAK,KACLnN,KAAK,SACL,cAAY,SAAY,GAC3B5E,KAAKO,MAAMwP,UAAY,oBAAiB,cAG7C,cAAC1E,GAAA,EAAD,CAAOxF,MAAO,CAAEyF,UAAW,QAAUF,QAASpL,KAAKO,MAAM4I,WAAYoC,KAAMvL,KAAKO,MAAM4H,aAAtF,SACKnI,KAAKO,MAAM2I,sB,GAlLcsC,IAAMzE,WCH3BiL,G,4MAEjBzR,MAAQ,CACJmL,OAAO,G,EAEXrB,OAAS,WAEL,EAAKlF,UAAS,SAAAwG,GAAQ,MAAK,CACvBD,OAAQC,EAASD,W,4CAGzB,WAEI,OAAO,eAAC,WAAD,WACH,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUU,QAAS9L,KAAKqK,OAAxC,sBACA,eAAC2B,EAAA,EAAD,CAAOT,KAAMvL,KAAKO,MAAMmL,MAAOlF,UAAWxG,KAAKyE,MAAM+B,UAAWyF,OAAQjM,KAAKqK,OAAQ0H,KAAK,KAA1F,UACI,eAAC/F,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,sBAAoCnM,KAAKyE,MAAM2E,KAAKhE,QACpD,cAAC4G,EAAA,EAAMI,KAAP,UACI,cAAC,GAAD,CACI/B,OAAQrK,KAAKqK,OACbjB,KAAMpJ,KAAKyE,MAAM2E,KACjBoB,oBAAqBxK,KAAKyE,MAAM+F,kC,GArBbzD,aCE9BkL,GAAb,kDAIE,WAAYxN,GACX,IAAD,8BACE,cAAMA,IASR9D,YAAc,SAACuF,GAEb,EAAK8G,iBAVL,EAAKzM,MAAQ,CAAEwM,MAAO,GAAImF,UAAW,EAAG/E,SAAS,EAAMC,eAAe,GAFxE,EALF,qDAUE,WAEEpN,KAAKgN,kBAZT,kEAoBE,mCAAAjN,EAAA,sEAEsBuE,EAAY+E,iBAFlC,OAEQC,EAFR,OAGEC,MAAM,GAAD,OAAIpG,OAAOgP,eAAiB,CAC/BzI,QAAUJ,EAAa,CAAE,cAAgB,UAAhB,OAA2BA,IAAlC,KAEjBS,MAAK,SAAAwD,GAAG,OAAIA,EAAItD,UAChBF,MAAK,SAAAwD,GAAG,OAAI,EAAKpI,SAAS,CAAE4H,MAAOQ,EAAIR,MAAOmF,UAAW3E,EAAI2E,UAAW/E,SAAS,EAAOC,eAAe,OACvG9C,OAAM,SAAAC,GAEL1J,QAAQC,IAAIyJ,GACZ,EAAKpF,SAAS,CAAE4H,MAAO,GAAII,SAAS,EAAOC,eAAe,OAXhE,2CApBF,oFAmCE,SAAiBL,GAChB,IAAD,OACE,OAAO,eAACvH,EAAA,EAAD,CAAWK,MAAO,CAAE4B,WAAY,OAAQgG,YAAa,OAArD,UACL,eAACC,EAAA,EAAD,CAAKlH,UAAU,qBAAf,UACE,cAACmH,EAAA,EAAD,CAAKO,MAAM,QAAQrI,MAAO,CAAEmI,UAAW,QAASoE,QAAS,OAAzD,SACE,cAAC3H,GAAA,EAAKI,MAAN,CAAYhF,MAAO,CAAEwM,OAAQ,OAA7B,yBAEF,cAAC1E,EAAA,EAAD,CAAK2E,GAAI,EAAT,SACE,cAAC7H,GAAA,EAAKM,QAAN,CAAcC,KAAK,SAAS5F,KAAK,QAAQc,GAAG,QAAQsC,MAAOxI,KAAKO,MAAM2R,UAAWrM,MAAO,CAAEmI,UAAW,QAASoE,QAAS,OAAST,UAAQ,SAG5I,cAACjE,EAAA,EAAD,CAAK7H,MAAO,CAAE4B,WAAY,OAA1B,SACE,cAACkG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAAd,UACE,uBAAOrH,UAAU,aAAjB,SACE,+BACE,sCACA,6CACA,uCACA,uCACA,oBAAIX,MAAO,CAAEmI,UAAW,UAAxB,0BAGJ,iCACIjB,GAASA,EAAMtK,QAAU,EACzB,6BACE,oBAAIwL,QAAQ,IAAIC,MAAM,SAAtB,SAA+B,iDAE/BnB,EAAM3K,KAAI,SAAAgH,GAAI,OACd,+BACE,6BACGA,EAAKhE,OAER,6BACGgE,EAAKnB,cAER,6BACGmB,EAAKlB,QAER,6BACGkB,EAAKmJ,gBAER,oBAAIrE,MAAM,SAAV,SACE,cAAC,GAAD,CACE9E,KAAMA,EACNoB,oBAAqB,EAAK7J,kBAhBvByI,EAAKlD,qBAhEhC,oBA2FE,WAEE,IAAIkI,EAAWpO,KAAKO,MAAM4M,QACtB,4BAAG,8CACHnN,KAAKO,MAAM6M,cACTpN,KAAKqO,iBAAiBrO,KAAKO,MAAMwM,OACjC,qDAEN,OACE,gCACE,oBAAI7G,GAAG,aAAP,yBACCkI,SAtGT,GAA2BrH,aAAdkL,GAEJjL,YAAciL,GAAM7M,K,uCCDRoN,G,kDACjB,WAAY/N,GAAQ,IAAD,8BACf,cAAMA,IAEDlE,MAAQ,CACTkS,OAAO,EACPC,eAAe,GALJ,E,qDASnB,WAAqB,IAAD,OAChB1S,KAAK6E,cAAgBP,EAAYQ,WAAU,kBAAM,EAAK6N,2BACtD3S,KAAK4S,gC,kCAGT,WACItO,EAAYU,YAAYhF,KAAK6E,iB,oBAGjC,WACI,MAAiC7E,KAAKO,MAA9BkS,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cACXG,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOhT,KAAKyE,MAAMwO,KACvB,IAAMC,EAAS,UAAML,EAAKM,SAAX,aAAwBN,EAAKO,MAA7B,OAAoCP,EAAKhM,UAAzC,OAAoDgM,EAAKQ,QAAzD,OAAkER,EAAKS,MAChFC,EAAW,UAAM3U,EAAmBG,MAAzB,YAAkCP,EAAlC,YAAmEgV,UAAUN,IAC9F,GAAKT,EAEE,CACH,MAA0CzS,KAAKyE,MAA5BsC,EAAnB,EAAQ0M,UAAyBC,EAAjC,mBACA,OAAO,cAAC,IAAD,6BAAWA,GAAX,IACHC,OAAQ,SAAClP,GACL,OAAIiO,EACO,cAAC,EAAD,gBAAejO,IAEf,cAAC,IAAD,CAAUmB,GAAI2N,QARjC,OAAO,0B,gFAcf,4BAAAxT,EAAA,sEACgCuE,EAAYI,kBAD5C,OACUgO,EADV,OAEI1S,KAAKmF,SAAS,CAAEsN,OAAO,EAAMC,kBAFjC,gD,gIAKA,sBAAA3S,EAAA,6DACIC,KAAKmF,SAAS,CAAEsN,OAAO,EAAOC,eAAe,IADjD,SAEU1S,KAAK4S,8BAFf,gD,2DA7CwC7L,aCI/BhI,GAAb,kDACI,WAAY0F,GAAQ,IAAD,8BACf,cAAMA,IAEDlE,MAAQ,CACTW,aAASO,GAJE,EADvB,qDASI,WACI,IAAMmS,EAAS5T,KAAKyE,MAAMmP,OAC1B,OAAQA,GACJ,KAAKlV,EACDsB,KAAK6T,MAAM7T,KAAK8T,gBAChB,MACJ,KAAKpV,EACDsB,KAAK+T,uBACL,MACJ,KAAKrV,EACD,IACMyC,EADS,IAAI6S,gBAAgB7Q,OAAOC,SAASiQ,QAC9BY,IAAIzV,GACzBwB,KAAKmF,SAAS,CAAEjE,QAASC,IACzB,MACJ,KAAKzC,EACDsB,KAAKkU,oBACL,MACJ,KAAKxV,EACDsB,KAAKmU,qBACL,MACJ,QACI,MAAM,IAAIpT,MAAJ,0BAA6B6S,EAA7B,SA9BtB,oBAkCI,WACI,IAAMA,EAAS5T,KAAKyE,MAAMmP,OAClB1S,EAAYlB,KAAKO,MAAjBW,QAER,GAAMA,EACF,OAAO,8BAAMA,IAEb,OAAQ0S,GACJ,KAAKlV,EACD,OAAQ,mDACZ,KAAKA,EACD,OAAQ,4DACZ,KAAKA,EACL,KAAKA,EACD,OAAQ,wBACZ,QACI,MAAM,IAAIqC,MAAJ,0BAA6B6S,EAA7B,SAlD1B,0DAuDI,WAAYV,GAAZ,iBAAAnT,EAAA,6DACUQ,EAAQ,CAAE2S,aADpB,SAEyB5O,EAAY8P,OAAO7T,GAF5C,OAEU8T,EAFV,YAGYA,EAAOxR,OAHnB,cAIaC,EAA2BG,SAJxC,SAMaH,EAA2BE,QANxC,SASaF,EAA2BC,KATxC,+EAOkB/C,KAAKsU,oBAAoBpB,GAP3C,eAUYlT,KAAKmF,SAAS,CAAEjE,QAASmT,EAAOnT,UAV5C,mCAakB,IAAIH,MAAJ,gCAAmCsT,EAAOxR,OAA1C,MAblB,iDAvDJ,gIAwEI,8BAAA9C,EAAA,6DACUuB,EAAM6B,OAAOC,SAAS4P,KADhC,SAEyB1O,EAAYiQ,eAAejT,GAFpD,OAEU+S,EAFV,YAGYA,EAAOxR,OAHnB,cAIaC,EAA2BG,SAJxC,SAQaH,EAA2BE,QARxC,SAWaF,EAA2BC,KAXxC,yBAOkB,IAAIhC,MAAM,wBAP5B,wBASkBf,KAAKsU,oBAAoBtU,KAAK8T,aAAaO,EAAO9T,QATpE,mDAYYP,KAAKmF,SAAS,CAAEjE,QAASmT,EAAOnT,UAZ5C,mCAekB,IAAIH,MAAJ,gDAAmDsT,EAAOxR,OAA1D,OAflB,iDAxEJ,gFA2FI,SAAatC,GACT,IACMiU,EADS,IAAIR,gBAAgB7Q,OAAOC,SAASiQ,QAC1BY,IAAIzV,GAC7B,GAAIgW,IAAcA,EAAUC,WAAV,UAAwBtR,OAAOC,SAASC,OAAxC,MAEd,MAAM,IAAItC,MAAM,yFAEpB,OAAQR,GAASA,EAAM2S,WAAcsB,GAA9B,UAA8CrR,OAAOC,SAASC,OAA9D,OAlGf,gCAqGI,WACIrD,KAAK0U,+BAA+BvR,OAAOK,qBAA3C,UAAoE5E,EAAmBW,qBAAvF,YAA+Gf,EAA/G,YAAgJgV,UAAU5U,EAAmBG,WAtGrL,+BAyGI,WACIiB,KAAK0U,+BAA+BvR,OAAOK,qBAAsB5E,EAAmBY,sBA1G5F,4CA6GI,SAA+B4T,EAAMuB,GACjC,IAAMpB,EAAW,UAAMH,GAAN,OAAauB,GAI9BxR,OAAOC,SAASwR,QAAQrB,KAlHhC,iCAqHI,SAAoBL,GAGhB/P,OAAOC,SAASwR,QAAQ1B,OAxHhC,GAA2BnM,aCDd8N,GAAb,kDACI,WAAYpQ,GAAQ,IAAD,8BACf,cAAMA,IAEDlE,MAAQ,CACTW,aAASO,EACTqT,SAAS,EACTpC,eAAe,GANJ,EADvB,qDAWI,WACI,IAAMkB,EAAS5T,KAAKyE,MAAMmP,OAC1B,OAAQA,GACJ,KAAKnV,EACK0E,OAAOuL,QAAQnO,MAAMA,MAAMuG,MAC7B9G,KAAK+U,OAAO/U,KAAK8T,gBAGjB9T,KAAKmF,SAAS,CAAE2P,SAAS,EAAM5T,QAAS,uDAE5C,MACJ,KAAKzC,EACDuB,KAAKgV,wBACL,MACJ,KAAKvW,EACDuB,KAAKmF,SAAS,CAAE2P,SAAS,EAAM5T,QAAS,iCACxC,MACJ,QACI,MAAM,IAAIH,MAAJ,0BAA6B6S,EAA7B,MAGd5T,KAAK4S,gCAhCb,oBAmCI,WACI,MAA6B5S,KAAKO,MAA1BuU,EAAR,EAAQA,QAAS5T,EAAjB,EAAiBA,QACjB,IAAK4T,EACD,OAAO,wBAEX,GAAM5T,EACF,OAAQ,8BAAMA,IAEd,IAAM0S,EAAS5T,KAAKyE,MAAMmP,OAC1B,OAAQA,GACJ,KAAKnV,EACD,OAAQ,oDACZ,KAAKA,EACD,OAAQ,6DACZ,KAAKA,EACD,OAAQ,8BAAMyC,IAClB,QACI,MAAM,IAAIH,MAAJ,0BAA6B6S,EAA7B,SApD1B,2DAyDI,WAAaV,GAAb,iBAAAnT,EAAA,6DACUQ,EAAQ,CAAE2S,aADpB,SAEkC5O,EAAYI,kBAF9C,mDAI6BJ,EAAY2Q,QAAQ1U,GAJjD,OAIc8T,EAJd,YAKgBA,EAAOxR,OALvB,cAMiBC,EAA2BG,SAN5C,UAQiBH,EAA2BE,QAR5C,UAWiBF,EAA2BC,KAX5C,yEASsB/C,KAAKsU,oBAAoBpB,GAT/C,mDAYgBlT,KAAKmF,SAAS,CAAEjE,QAASmT,EAAOnT,UAZhD,mCAesB,IAAIH,MAAM,yCAfhC,gCAkBQf,KAAKmF,SAAS,CAAEjE,QAAS,iCAlBjC,iDAzDJ,iIA+EI,8BAAAnB,EAAA,6DACUuB,EAAM6B,OAAOC,SAAS4P,KADhC,SAEyB1O,EAAY4Q,gBAAgB5T,GAFrD,OAEU+S,EAFV,YAGYA,EAAOxR,OAHnB,cAIaC,EAA2BG,SAJxC,SAQaH,EAA2BE,QARxC,SAWaF,EAA2BC,KAXxC,yBAOkB,IAAIhC,MAAM,wBAP5B,wBASkBf,KAAKsU,oBAAoBtU,KAAK8T,aAAaO,EAAO9T,QATpE,mDAYYP,KAAKmF,SAAS,CAAEjE,QAASmT,EAAOnT,UAZ5C,mCAekB,IAAIH,MAAM,yCAf5B,iDA/EJ,sIAkGI,4BAAAhB,EAAA,sEACgCuE,EAAYI,kBAD5C,OACUgO,EADV,OAEI1S,KAAKmF,SAAS,CAAE2P,SAAS,EAAMpC,kBAFnC,gDAlGJ,gFAuGI,SAAanS,GACT,IACMiU,EADS,IAAIR,gBAAgB7Q,OAAOC,SAASiQ,QAC1BY,IAAIzV,GAC7B,GAAIgW,IAAcA,EAAUC,WAAV,UAAwBtR,OAAOC,SAASC,OAAxC,MAEd,MAAM,IAAItC,MAAM,yFAEpB,OAAQR,GAASA,EAAM2S,WACnBsB,GADG,UAEArR,OAAOC,SAASC,QAFhB,OAEyBzE,EAAmBS,aAhH3D,iCAmHI,SAAoB6T,GAChB,OAAO/P,OAAOC,SAASwR,QAAQ1B,OApHvC,GAA4BnM,aCHPoO,G,4JAEnB,WACE,OACE,eAAC,WAAD,WACI,cAAC,IAAD,CAAOlC,KAAMrU,EAAmBG,MAAO4U,OAAQ,kBAAMyB,GAAY1W,MACjE,cAAC,IAAD,CAAOuU,KAAMrU,EAAmBI,YAAa2U,OAAQ,kBAAMyB,GAAY1W,MACvE,cAAC,IAAD,CAAOuU,KAAMrU,EAAmBK,cAAe0U,OAAQ,kBAAMyB,GAAY1W,MACzE,cAAC,IAAD,CAAOuU,KAAMrU,EAAmBO,QAASwU,OAAQ,kBAAMyB,GAAY1W,MACnE,cAAC,IAAD,CAAOuU,KAAMrU,EAAmBM,SAAUyU,OAAQ,kBAAMyB,GAAY1W,MACpE,cAAC,IAAD,CAAOuU,KAAMrU,EAAmBQ,OAAQuU,OAAQ,kBAAM0B,GAAa5W,MACnE,cAAC,IAAD,CAAOwU,KAAMrU,EAAmBU,eAAgBqU,OAAQ,kBAAM0B,GAAa5W,MAC3E,cAAC,IAAD,CAAOwU,KAAMrU,EAAmBS,UAAWsU,OAAQ,kBAAM0B,GAAa5W,a,GAZ5BsI,aAiBpD,SAASqO,GAAYhQ,GACjB,OAAQ,cAAC,GAAD,CAAOwO,OAAQxO,IAG3B,SAASiQ,GAAajQ,GAClB,OAAQ,cAAC,GAAD,CAAQwO,OAAQxO,I,UCbPkQ,G,4JAGnB,WACE,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACtC,KAAK,IAAIQ,UAAW5L,IACjC,cAAC,GAAD,CAAgBoL,KAAM1O,EAA8BkP,UAAW3G,KAC/D,cAAC,GAAD,CAAgBmG,KAAM1O,EAAgCkP,UAAWnF,KACjE,cAAC,GAAD,CAAgB2E,KAAM1O,EAA4BkP,UAAWpE,KAC7D,cAAC,GAAD,CAAgB4D,KAAM1O,EAA4BkP,UAAWxB,KAC7D,cAAC,IAAD,CAAOgB,KAAMrU,EAAmBE,uBAAwB2U,UAAW0B,Y,GAX1CpO,aAAZuO,GACZtO,YAAcsO,GAAIlQ,KChB3B,IAYeoQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3L,MAAK,YAAkD,IAA/C4L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCRO,GAAUlD,SAASmD,qBAAqB,QAAQ,GAAGC,aAAa,QAEtEC,IAASxC,OACP,cAAC,IAAD,CAAeyC,SAAUJ,GAAzB,SACE,cAAC,GAAD,MAEFlD,SAASuD,eAAe,SAK1Bb,O","file":"static/js/main.c0110425.chunk.js","sourcesContent":["export const ApplicationName = 'DotnetEconomy';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const AuthorizationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { ApplicationName, AuthorizationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    // We try to authenticate the user in three different ways:\r\n    // 1) We try to see if we can authenticate the user silently. This happens\r\n    //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n    //    on the client.\r\n    // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n    //    redirect flow.\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\r\n            this.updateState(silentUser);\r\n            return this.success(state);\r\n        } catch (silentError) {\r\n            // User might not be authenticated, fallback to popup authentication\r\n            console.log(\"Silent authentication error: \", silentError);\r\n\r\n            try {\r\n                if (this._popUpDisabled) {\r\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n                }\r\n\r\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\r\n                this.updateState(popUpUser);\r\n                return this.success(state);\r\n            } catch (popUpError) {\r\n                if (popUpError.message === \"Popup window closed\") {\r\n                    // The user explicitly cancelled the login action by closing an opened popup.\r\n                    return this.error(\"The user closed the window.\");\r\n                } else if (!this._popUpDisabled) {\r\n                    console.log(\"Popup authentication error: \", popUpError);\r\n                }\r\n\r\n                // PopUps might be blocked by the user, fallback to redirect\r\n                try {\r\n                    await this.userManager.signinRedirect(this.createArguments(state));\r\n                    return this.redirect();\r\n                } catch (redirectError) {\r\n                    console.log(\"Redirect authentication error: \", redirectError);\r\n                    return this.error(redirectError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        var hostAndPort = window.location.origin\r\n        \r\n        let settings = {\r\n            authority: `${window.IDENTITY_SERVICE_URL}`,\r\n            client_id: \"frontend\",\r\n            redirect_uri: `${hostAndPort}${AuthorizationPaths.LoginCallback}`,\r\n            response_type: \"code\",\r\n            scope:\"openid profile catalog.fullaccess inventory.fullaccess trading.fullaccess IdentityServerApi roles\",\r\n            post_logout_redirect_uri : `${hostAndPort}${AuthorizationPaths.LogOutCallback}`\r\n        };\r\n\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","export const ApplicationPaths = {\r\n  CatalogPath: '/catalog',\r\n  InventoryPath: '/inventory',\r\n  UsersPath: '/users',\r\n  StorePath: '/store'\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './api-authorization/AuthorizeService';\r\nimport { AuthorizationPaths } from './api-authorization/ApiAuthorizationConstants';\r\nimport { ApplicationPaths } from './Constants';\r\n\r\nexport class NavMenu extends Component\r\n{\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      userName: null,\r\n      role: null\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this._subscription = authService.subscribe(() => this.populateState());\r\n    this.populateState();\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    authService.unsubscribe(this._subscription);\r\n  }\r\n\r\n  async populateState()\r\n  {\r\n    const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n    this.setState({\r\n      isAuthenticated,\r\n      userName: user && user.name,\r\n      role: user && user.role\r\n    });\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <header>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Container>\r\n            <Navbar.Brand as={Link} to=\"/\" style={styles.navBarText}>Dotnet Economy</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              {this.checkAuthAndRenderMenuItems()}\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  checkAuthAndRenderMenuItems()\r\n  {\r\n    if (!this.state.isAuthenticated)\r\n    {\r\n      return this.anonymousView();\r\n    } else\r\n    {\r\n      return this.authenticatedView();\r\n    }\r\n  }\r\n\r\n  anonymousView()\r\n  {\r\n    const loginPath = `${AuthorizationPaths.Login}`;\r\n    return (<Fragment>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n      </Nav>\r\n      <Nav>\r\n        <Nav.Link as={Link} to={loginPath}>Login</Nav.Link>\r\n      </Nav>\r\n    </Fragment>);\r\n  }\r\n\r\n  authenticatedView()\r\n  {\r\n    if (this.state.role === \"Admin\")\r\n    {\r\n      return (<Fragment>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/\" style={styles.navBarText}>Home</Nav.Link>\r\n          {this.storeAndInventoryItems()}\r\n          <Nav.Link as={Link} to={ApplicationPaths.CatalogPath} style={styles.navBarText}>Catalog</Nav.Link>\r\n          <Nav.Link as={Link} to={ApplicationPaths.UsersPath} style={styles.navBarText}>Users</Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          {this.profileAndLogoutItems()}\r\n        </Nav>\r\n      </Fragment>);\r\n    }\r\n    else if (this.state.role === \"Player\")\r\n    {\r\n      return (<Fragment>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n          {this.storeAndInventoryItems()}\r\n        </Nav>\r\n        <Nav>\r\n          {this.profileAndLogoutItems()}\r\n        </Nav>\r\n      </Fragment>);\r\n    }\r\n    else\r\n    {\r\n      return (<Fragment>\r\n        {this.profileAndLogoutItems()}\r\n      </Fragment>);\r\n    }\r\n  }\r\n\r\n  storeAndInventoryItems()\r\n  {\r\n    return (<Fragment>\r\n      <Nav.Link as={Link} to={ApplicationPaths.StorePath} style={styles.navBarText}>Store</Nav.Link>\r\n      <Nav.Link as={Link} to={ApplicationPaths.InventoryPath} style={styles.navBarText}>My Inventory</Nav.Link>\r\n    </Fragment>);\r\n  }\r\n\r\n  profileAndLogoutItems()\r\n  {\r\n    const profilePath = `${AuthorizationPaths.Profile}`;\r\n    const logoutPath = { pathname: `${AuthorizationPaths.LogOut}`, state: { local: true } };\r\n    return (<Fragment>\r\n      <Nav.Link as={Link} to={profilePath} style={styles.navBarText}>Hello {this.state.userName}</Nav.Link>\r\n      <Nav.Link as={Link} to={logoutPath} style={styles.navBarText}>Logout</Nav.Link>\r\n    </Fragment>);\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  navBarText: { color: \"black\", fontWeight:'bold' }\r\n};","import React, { Component } from 'react';\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer border-top text-muted\">\r\n        <div className=\"container\">\r\n          &copy; 2023 - Dotnet Economy\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bg.12058d38.png\";","import React, { Component } from 'react';\r\nimport { Container} from 'react-bootstrap';\r\nimport { NavMenu } from './NavMenu';\r\nimport { Footer } from './Footer';\r\nimport bgImage from '../images/bg.png';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundImage: `url(${bgImage})`, backgroundSize: 'cover', height: '100vh' }}>\r\n        <NavMenu />\r\n        <Container style={{ paddingTop: '50px', paddingBottom: '50px', color: 'white', fontSize: '1.3em', fontWeight: 'bold' }}>\r\n          {this.props.children}\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './api-authorization/AuthorizeService';\r\nimport { ApplicationPaths } from './Constants';\r\n\r\nexport class Home extends Component\r\n{\r\n  static displayName = Home.name;\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      userName: null,\r\n      role: null\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this._subscription = authService.subscribe(() => this.populateState());\r\n    this.populateState();\r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    authService.unsubscribe(this._subscription);\r\n  }\r\n\r\n  async populateState()\r\n  {\r\n    const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n    this.setState({\r\n      isAuthenticated,\r\n      userName: user && user.name,\r\n      role: user && user.role\r\n    });\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div>\r\n        <p>Welcome to the Dotnet Economy website, a cloud native virtual economy system.</p>\r\n        <p>To get started, you can:</p>\r\n        <ul>\r\n          <li>Visit the <Link to={ApplicationPaths.StorePath}>Store</Link></li>\r\n          <li>Check your <Link to={ApplicationPaths.InventoryPath}>Inventory</Link></li>\r\n          {this.adminView()}\r\n        </ul>\r\n        {this.devOnlyLinks()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  adminView()\r\n  {\r\n    if (this.state.isAuthenticated && this.state.role === \"Admin\")\r\n    {\r\n      return (<Fragment>\r\n        <li>Manage the <Link to={ApplicationPaths.CatalogPath}>Catalog</Link></li>\r\n        <li>Manage registered <Link to={ApplicationPaths.UsersPath}>Users</Link></li>\r\n      </Fragment>);\r\n    }\r\n  }\r\n\r\n  devOnlyLinks()\r\n  {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development')\r\n    {\r\n      return (<Fragment>\r\n        <p>You can also</p>\r\n        <ul>\r\n          <li>Manage the <a href={window.RABBITMQ_URL} target=\"_blank\" rel=\"noreferrer\">message queues</a></li>\r\n          <li>Explore the Open API documentation:\r\n            <ul>\r\n              <li><a href={`${window.CATALOG_SERVICE_URL}/swagger`} target=\"_blank\" rel=\"noreferrer\">Catalog service</a></li>\r\n              <li><a href={`${window.INVENTORY_SERVICE_URL}/swagger`} target=\"_blank\" rel=\"noreferrer\">Inventory service</a></li>\r\n              <li><a href={`${window.IDENTITY_SERVICE_URL}/swagger`} target=\"_blank\" rel=\"noreferrer\">Identity service</a></li>\r\n              <li><a href={`${window.TRADING_SERVICE_URL}/swagger`} target=\"_blank\" rel=\"noreferrer\">Trading service</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </Fragment>);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Alert } from 'react-bootstrap';\r\nimport authService from '../api-authorization/AuthorizeService'\r\n\r\nexport default class ItemForm extends React.Component\r\n{\r\n    state = {\r\n        id: 0,\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        alertVisible: false,\r\n        validated: false\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if (this.props.item)\r\n        {\r\n            const { id, name, description, price } = this.props.item\r\n            this.setState({ id, name, description, price });\r\n        }\r\n    }\r\n    onChange = e =>\r\n    {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitNew = (e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false)\r\n        {            \r\n            e.stopPropagation();\r\n        }\r\n        else\r\n        {\r\n            this.createItem();\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    async createItem()\r\n    {\r\n        const token = await authService.getAccessToken();\r\n        fetch(`${window.CATALOG_ITEMS_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                price: parseFloat(this.state.price)\r\n            })\r\n        })\r\n            .then(async response =>\r\n            {\r\n                if (!response.ok)\r\n                {\r\n                    const errorData = await response.json();\r\n                    console.error(errorData);\r\n                    throw new Error(`Could not add the item: ${errorData.title}`);\r\n                }\r\n\r\n                return response.json();\r\n            })\r\n            .then(item =>\r\n            {\r\n                this.props.addItemToState(item);\r\n                this.props.toggle();\r\n            })\r\n            .catch(err => \r\n            {\r\n                this.showAlert(err.message);\r\n            });\r\n    }\r\n\r\n    submitEdit = e =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false)\r\n        {            \r\n            e.stopPropagation();\r\n        }\r\n        else\r\n        {\r\n            this.updateItem();\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    async updateItem()\r\n    {\r\n        const token = await authService.getAccessToken();\r\n        fetch(`${window.CATALOG_ITEMS_API_URL}/${this.state.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                price: parseFloat(this.state.price)\r\n            })\r\n        })\r\n            .then(async response =>\r\n            {\r\n                if (!response.ok)\r\n                {\r\n                    const errorData = await response.json();\r\n                    console.error(errorData);\r\n                    throw new Error(`Could not update the item: ${errorData.title}`);\r\n                }\r\n\r\n                this.props.toggle();\r\n                this.props.updateItemIntoState(this.state.id);\r\n            })\r\n            .catch(err => \r\n            {\r\n                this.showAlert(err.message);\r\n            });\r\n    }\r\n\r\n    showAlert = (message) =>\r\n    {\r\n        this.setState({\r\n            alertMessage: message,\r\n            alertColor: \"danger\",\r\n            alertVisible: true\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <Form noValidate validated={this.state.validated} onSubmit={this.props.item ? this.submitEdit : this.submitNew}>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"name\">Name:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.name} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Name field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"description\">Description:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"description\" onChange={this.onChange} value={this.state.description} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"price\">Price:</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={this.onChange} value={this.state.price} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Price field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n\r\n            <Alert style={{ marginTop: \"10px\" }} variant={this.state.alertColor} show={this.state.alertVisible}>\r\n                {this.state.alertMessage}\r\n            </Alert>\r\n        </Form>;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport ItemForm from './ItemForm';\r\nexport default class ItemModal extends Component {\r\n    state = {\r\n        modal: false\r\n    }\r\n    toggle = () => {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    }\r\n    render() {\r\n        const isNew = this.props.isNew;\r\n        let title = 'Edit Item';\r\n        let button = '';\r\n        if (isNew) {\r\n            title = 'Add Item';\r\n            button = <Button\r\n                variant=\"primary\"\r\n                onClick={this.toggle}\r\n                style={{ minWidth: \"200px\" }}>Add</Button>;\r\n        } else {\r\n            button = <Button\r\n                variant=\"primary\"\r\n                onClick={this.toggle}>Edit</Button>;\r\n        }\r\n        return <Fragment>\r\n            {button}\r\n            <Modal show={this.state.modal} className={this.props.className} onHide={this.toggle}>\r\n                <Modal.Header closeButton>{title}</Modal.Header>\r\n                <Modal.Body>\r\n                    <ItemForm\r\n                        addItemToState={this.props.addItemToState}\r\n                        updateItemIntoState={this.props.updateItemIntoState}\r\n                        toggle={this.toggle}\r\n                        item={this.props.item} />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>;\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Form, Alert } from 'react-bootstrap';\r\nimport authService from '../api-authorization/AuthorizeService'\r\n\r\nexport default class GrantItemForm extends React.Component\r\n{\r\n    state = {\r\n        id: '',\r\n        userId: '',\r\n        quantity: 1,\r\n        alertVisible: false,\r\n        validated: false\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if (this.props.item)\r\n        {\r\n            const { id } = this.props.item\r\n            this.setState({ id });\r\n        }\r\n    }\r\n    onChange = e =>\r\n    {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitGrant = (e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false)\r\n        {\r\n            e.stopPropagation();\r\n        }\r\n        else\r\n        {\r\n            this.grantItem();\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    async grantItem()\r\n    {\r\n        const token = await authService.getAccessToken();\r\n        fetch(`${window.INVENTORY_ITEMS_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.state.userId,\r\n                catalogItemId: this.state.id,\r\n                quantity: parseInt(this.state.quantity)\r\n            })\r\n        })\r\n            .then(async response =>\r\n            {\r\n                if (!response.ok)\r\n                {\r\n                    const errorData = await response.json();\r\n                    console.error(errorData);\r\n                    throw new Error(`Could not grant the item: ${errorData.title}`);\r\n                }\r\n\r\n                this.props.toggle();\r\n            })\r\n            .catch(err => \r\n            {\r\n                this.showAlert(err.message);\r\n            });\r\n    }\r\n\r\n    showAlert = (message) =>\r\n    {\r\n        this.setState({\r\n            alertMessage: message,\r\n            alertColor: \"danger\",\r\n            alertVisible: true\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <Form noValidate validated={this.state.validated} onSubmit={this.submitGrant}>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"userId\">User Id:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"userId\" onChange={this.onChange} value={this.state.userId} required />\r\n                <Form.Control.Feedback type=\"invalid\">The User Id field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"quantity\">Quantity:</Form.Label>\r\n                <Form.Control type=\"number\" name=\"quantity\" onChange={this.onChange} value={this.state.quantity} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Quantity field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Grant</Button>\r\n\r\n            <Alert style={{ marginTop: \"10px\" }} variant={this.state.alertColor} show={this.state.alertVisible}>\r\n                {this.state.alertMessage}\r\n            </Alert>\r\n        </Form>;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport GrantItemForm from './GrantItemForm';\r\nexport default class GrantItemModal extends Component\r\n{\r\n    state = {\r\n        modal: false\r\n    }\r\n    toggle = () =>\r\n    {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    }\r\n    render()\r\n    {\r\n        return <Fragment>\r\n            <Button variant=\"primary\" onClick={this.toggle}>Grant</Button>\r\n            <Modal show={this.state.modal} className={this.props.className} onHide={this.toggle}>\r\n                <Modal.Header closeButton>Grant {this.props.item.name}</Modal.Header>\r\n                <Modal.Body>\r\n                    <GrantItemForm\r\n                        toggle={this.toggle}\r\n                        item={this.props.item}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Col, Container, Row, Table, Button } from 'react-bootstrap';\r\nimport ItemModal from './form/ItemModal';\r\nimport GrantItemModal from './form/GrantItemModal';\r\nimport authService from './api-authorization/AuthorizeService'\r\n\r\nexport class Catalog extends Component {\r\n  static displayName = Catalog.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], loading: true, loadedSuccess: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateItems();\r\n  }\r\n\r\n  async populateItems() {\r\n    const token = await authService.getAccessToken();\r\n    fetch(`${window.CATALOG_ITEMS_API_URL}`, {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(response => { \r\n        return response.json(); \r\n      })\r\n      .then(returnedItems => this.setState({ items: returnedItems, loading: false, loadedSuccess: true }))\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ items: [], loading: false, loadedSuccess: false })\r\n      });\r\n  }\r\n\r\n  addItemToState = item => {\r\n    this.setState(previous => ({\r\n      items: [...previous.items, item]\r\n    }));\r\n  }\r\n  updateState = (id) => {\r\n    this.populateItems();\r\n  }\r\n  deleteItemFromState = id => {\r\n    const updated = this.state.items.filter(item => item.id !== id);\r\n    this.setState({ items: updated })\r\n  }\r\n  async deleteItem(id) {\r\n    let confirmDeletion = window.confirm('Do you really wish to delete it?');\r\n    if (confirmDeletion) {\r\n      const token = await authService.getAccessToken();\r\n      fetch(`${window.CATALOG_ITEMS_API_URL}/${id}`, {\r\n        method: 'delete',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res => {\r\n          this.deleteItemFromState(id);\r\n        })\r\n        .catch(err => {          \r\n          console.log(err);\r\n          window.alert(\"Could not delete the item.\");          \r\n        });\r\n    }\r\n  }\r\n\r\n  renderItemsTable(items) {\r\n    return <Container style={{ paddingTop: \"10px\", paddingLeft: \"0px\" }}>\r\n      <Row>\r\n        <Col>\r\n          <Table striped bordered hover >\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Price</th>\r\n                <th style={{ textAlign: \"center\" }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!items || items.length <= 0 ?\r\n                <tr>\r\n                  <td colSpan=\"6\" align=\"center\"><b>No Items yet</b></td>\r\n                </tr>\r\n                : items.map(item => (\r\n                  <tr key={item.id}>\r\n                    <td>\r\n                      {item.name}\r\n                    </td>\r\n                    <td>\r\n                      {item.description}\r\n                    </td>\r\n                    <td>\r\n                      {item.price}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                      <div>\r\n                        <ItemModal\r\n                          isNew={false}\r\n                          item={item}\r\n                          updateItemIntoState={this.updateState} />\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <GrantItemModal\r\n                          item={item} />\r\n                    &nbsp;&nbsp;&nbsp;                    \r\n                    <Button variant=\"danger\" onClick={() => this.deleteItem(item.id)}>Delete</Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <ItemModal isNew={true} addItemToState={this.addItemToState} />\r\n        </Col>\r\n      </Row>\r\n    </Container>;\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : this.state.loadedSuccess\r\n        ? this.renderItemsTable(this.state.items)\r\n        : <p>Could not load items</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Catalog Items</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Container, Row, Table, Button } from 'react-bootstrap';\r\nimport authService from './api-authorization/AuthorizeService'\r\n\r\nexport class Inventory extends Component {\r\n  static displayName = Inventory.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], loading: true, loadedSuccess: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateItems();\r\n  }\r\n\r\n  async populateItems() {\r\n\r\n    let userId = '';\r\n\r\n    if (this.cameFromUsersPage()) {\r\n      userId = this.props.location.user.id;\r\n    }\r\n    else {\r\n      const user = await authService.getUser();\r\n      userId = user.sub;\r\n    }\r\n\r\n    const token = await authService.getAccessToken();\r\n    fetch(`${window.INVENTORY_ITEMS_API_URL}?userId=${userId}`, {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(response => response.json())\r\n      .then(returnedItems => this.setState({ items: returnedItems, loading: false, loadedSuccess: true }))\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ items: [], loading: false, loadedSuccess: false })\r\n      });\r\n  }\r\n\r\n  renderItemsTable(items) {\r\n    return <Container style={{ paddingTop: \"10px\", paddingLeft: \"0px\" }}>\r\n      <Row>\r\n        <Col>\r\n          <Table striped>\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Quantity</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!items || items.length <= 0 ?\r\n                <tr>\r\n                  <td colSpan=\"6\" align=\"center\"><b>No Items yet</b></td>\r\n                </tr>\r\n                : items.map(item => (\r\n                  <tr key={item.catalogItemId}>\r\n                    <td>\r\n                      {item.name}\r\n                    </td>\r\n                    <td>\r\n                      {item.description}\r\n                    </td>\r\n                    <td>\r\n                      {item.quantity}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Button color=\"primary\" hidden={!this.cameFromUsersPage()} onClick={() => this.props.history.goBack()}>Back to Users</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>;\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : this.state.loadedSuccess\r\n        ? this.renderItemsTable(this.state.items)\r\n        : <p>Could not load items</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >{this.cameFromUsersPage() ? this.props.location.user.username : 'My'} Inventory</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  cameFromUsersPage() {\r\n    var val = this.props.location.user != null;\r\n    return val;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Alert } from 'react-bootstrap';\r\nimport authService from '../api-authorization/AuthorizeService'\r\n\r\nexport default class UserForm extends React.Component\r\n{\r\n    state = {\r\n        id: 0,\r\n        email: '',\r\n        okubo: '',\r\n        alertVisible: false,\r\n        validated: false\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if (this.props.user)\r\n        {\r\n            const { id, email, okubo } = this.props.user\r\n            this.setState({ id, email, okubo });\r\n        }\r\n    }\r\n    onChange = e =>\r\n    {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitEdit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false)\r\n        {\r\n            e.stopPropagation();\r\n        }\r\n        else\r\n        {\r\n            this.updateUser();\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    async updateUser()\r\n    {\r\n        const token = await authService.getAccessToken();\r\n        fetch(`${window.USERS_API_URL}/${this.state.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                email: this.state.email,\r\n                okubo: parseFloat(this.state.okubo)\r\n            })\r\n        })\r\n            .then(async response =>\r\n            {\r\n                if (!response.ok)\r\n                {\r\n                    const errorData = await response.json();\r\n                    console.error(errorData);\r\n                    throw new Error(`Could not update the user: ${errorData.title}`);\r\n                }\r\n\r\n                this.props.toggle();\r\n                this.props.updateUserIntoState(this.state.id);\r\n            })\r\n            .catch(err => \r\n            {\r\n                this.showAlert(err.message);\r\n            });\r\n    }\r\n\r\n    showAlert = (message) =>\r\n    {\r\n        this.setState({\r\n            alertMessage: message,\r\n            alertColor: \"danger\",\r\n            alertVisible: true\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <Form noValidate validated={this.state.validated} onSubmit={this.submitEdit}>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"email\">Name:</Form.Label>\r\n                <Form.Control type=\"email\" name=\"email\" label=\"Email:\" onChange={this.onChange} value={this.state.email} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Email field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"okubo\">Okubo:</Form.Label>\r\n                <Form.Control type=\"number\" name=\"okubo\" onChange={this.onChange} value={this.state.okubo} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Okubo field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n\r\n            <Alert style={{ marginTop: \"10px\" }} variant={this.state.alertColor} show={this.state.alertVisible}>\r\n                {this.state.alertMessage}\r\n            </Alert>\r\n        </Form>;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport UserForm from './UserForm';\r\nexport default class UserModal extends Component\r\n{\r\n    state = {\r\n        modal: false\r\n    }\r\n    toggle = () =>\r\n    {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    }\r\n    render()\r\n    {\r\n        let title = 'Edit User';\r\n        return <Fragment>\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={this.toggle}>Edit</Button>\r\n            <Modal show={this.state.modal} className={this.props.className} onHide={this.toggle}>\r\n                <Modal.Header closeButton>{title}</Modal.Header>\r\n                <Modal.Body>\r\n                    <UserForm\r\n                        updateUserIntoState={this.props.updateUserIntoState}\r\n                        toggle={this.toggle}\r\n                        user={this.props.user} />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/inventory-bag.97746de5.png\";","import React, { Component } from 'react';\r\nimport { Col, Container, Row, Table, Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport UserModal from './form/UserModal';\r\nimport inventoryLogo from '../images/inventory-bag.png';\r\nimport authService from './api-authorization/AuthorizeService'\r\n\r\nexport class Users extends Component\r\n{\r\n  static displayName = Users.name;\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = { users: [], loading: true, loadedSuccess: false };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.populateUsers();\r\n  }\r\n\r\n  async populateUsers()\r\n  {\r\n    const token = await authService.getAccessToken();\r\n    fetch(`${window.USERS_API_URL}`, {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => this.setState({ users: res, loading: false, loadedSuccess: true }))\r\n      .catch(err =>\r\n      {\r\n        console.log(err);\r\n        this.setState({ users: [], loading: false, loadedSuccess: false })\r\n      });\r\n  }\r\n\r\n  updateState = (id) =>\r\n  {\r\n    this.populateUsers();\r\n  }\r\n  deleteUserFromState = id =>\r\n  {\r\n    const updated = this.state.users.filter(user => user.id !== id);\r\n    this.setState({ users: updated })\r\n  }\r\n  async deleteUser(id)\r\n  {\r\n    let confirmDeletion = window.confirm('Do you really wish to delete it?');\r\n    if (confirmDeletion)\r\n    {\r\n      const token = await authService.getAccessToken();\r\n      fetch(`${window.USERS_API_URL}/${id}`, {\r\n        method: 'delete',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res =>\r\n        {\r\n          this.deleteUserFromState(id);\r\n        })\r\n        .catch(err => {          \r\n          console.log(err);\r\n          window.alert(\"Could not delete the user.\");          \r\n        });\r\n    }\r\n  }\r\n\r\n  renderUsersTable(users)\r\n  {\r\n    return <Container style={{ paddingTop: \"10px\", paddingLeft: \"0px\" }}>\r\n      <Row>\r\n        <Col>\r\n          <Table striped>\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Email</th>\r\n                <th>Okubo</th>\r\n                <th>Inventory</th>\r\n                <th style={{ textAlign: \"center\" }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!users || users.length <= 0 ?\r\n                <tr>\r\n                  <td colSpan=\"6\" align=\"center\"><b>No Users yet</b></td>\r\n                </tr>\r\n                : users.map(user => (\r\n                  <tr key={user.id}>\r\n                    <td>\r\n                      {user.id}\r\n                    </td>                    \r\n                    <td>\r\n                      {user.email}\r\n                    </td>\r\n                    <td>\r\n                      {user.okubo}\r\n                    </td>\r\n                    <td>\r\n                      <Link to={{\r\n                        pathname: '/inventory',\r\n                        user: user\r\n                      }} >\r\n                        <Image src={inventoryLogo} height={35} />\r\n                      </Link>\r\n                    </td>\r\n                    <td align=\"center\">\r\n                      <div>\r\n                        <UserModal\r\n                          user={user}\r\n                          updateUserIntoState={this.updateState} />\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <Button variant=\"danger\" onClick={() => this.deleteUser(user.id)}>Delete</Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>;\r\n  }\r\n\r\n  render()\r\n  {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : this.state.loadedSuccess\r\n        ? this.renderUsersTable(this.state.users)\r\n        : <p>Could not load users</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Users</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Alert, Spinner } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport authService from '../api-authorization/AuthorizeService';\r\n\r\nexport default class PurchaseForm extends React.Component\r\n{\r\n    state = {\r\n        id: 0,\r\n        name: '',\r\n        price: '',\r\n        quantity: 1,\r\n        alertVisible: false,\r\n        alertColor: '',\r\n        alertMessage: '',\r\n        isLoading: false,\r\n        buttonDisabled: false,\r\n        validated: false\r\n    }\r\n\r\n    connection = new HubConnectionBuilder()\r\n        .withUrl(`${window.TRADING_SERVICE_URL}/messageHub`, { accessTokenFactory: () => authService.getAccessToken() })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n    componentDidMount()\r\n    {\r\n        const { id, name, price } = this.props.item\r\n        this.setState({ id, name, price });\r\n\r\n        this.connection.on(\"ReceivePurchaseStatus\", this.onPurchaseStatusReceived);\r\n\r\n        this.connection.start()\r\n            .catch(err =>\r\n            {\r\n                console.log('connection error');\r\n            });\r\n    }\r\n\r\n    onChange = e =>\r\n    {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitPurchase = (e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false)\r\n        {\r\n            e.stopPropagation();\r\n        }\r\n        else\r\n        {\r\n            this.purchaseItem();\r\n        }\r\n\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    async purchaseItem()\r\n    {\r\n        let confirmPurchase = window.confirm(`Purchase ${this.state.quantity} ${this.state.name} for ${this.state.price * this.state.quantity} okubo?`);\r\n        if (confirmPurchase)\r\n        {\r\n            this.setState({ buttonDisabled: true, isLoading: true, alertVisible: false })\r\n            var idempotencyId = uuidv4();\r\n            this.fetchRetry(idempotencyId, 3);\r\n        }\r\n    }\r\n\r\n    async fetchRetry(idempotencyId, tries)\r\n    {\r\n        const token = await authService.getAccessToken();\r\n\r\n        return fetch(`${window.PURCHASE_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                itemId: this.state.id,\r\n                quantity: parseInt(this.state.quantity),\r\n                idempotencyId: idempotencyId\r\n            })\r\n        })\r\n            .then(async response =>\r\n            {\r\n                if (!response.ok)\r\n                {\r\n                    const errorData = await response.json();\r\n                    console.error(errorData);\r\n                    throw new Error(`Could not purchase the item: ${errorData.title}`);\r\n                }\r\n\r\n                console.log('Purchase request completed with status ' + response.status);\r\n                return response.json();\r\n            })\r\n            .catch(err => \r\n            {\r\n                var triesLeft = tries - 1;\r\n                if (!triesLeft)\r\n                {\r\n                    this.setState({\r\n                        alertMessage: err.message,\r\n                        alertColor: \"danger\",\r\n                        buttonDisabled: false,\r\n                        isLoading: false\r\n                    });\r\n                    this.showAlert(false);\r\n                    return;\r\n                }\r\n\r\n                return setTimeout(() => this.fetchRetry(idempotencyId, triesLeft), 5000)\r\n            });\r\n    }\r\n\r\n    onPurchaseStatusReceived = (status) =>\r\n    {\r\n        console.log('Received purchase status: ' + status.currentState);\r\n        this.setState({ isLoading: false })\r\n\r\n        if (status.currentState === \"Faulted\")\r\n        {\r\n            this.setState({\r\n                alertMessage: \"Could not purchase the item(s). \" + status.errorMessage,\r\n                alertColor: \"danger\",\r\n                buttonDisabled: false\r\n            });\r\n            this.showAlert(false);\r\n        }\r\n        else\r\n        {\r\n            this.props.updateItemIntoState(this.state.id);\r\n            this.setState({\r\n                alertMessage: \"Item(s) successfully purchased!\",\r\n                alertColor: \"success\"\r\n            });\r\n            this.showAlert(true);\r\n        }\r\n    }\r\n\r\n    showAlert = (autoDismiss) =>\r\n    {\r\n        this.setState({ alertVisible: true }, () =>\r\n        {\r\n            if (autoDismiss)\r\n            {\r\n                window.setTimeout(() =>\r\n                {\r\n                    this.props.toggle();\r\n                }, 2000)\r\n            }\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return <Form noValidate validated={this.state.validated} onSubmit={this.submitPurchase}>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"price\">Price:</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" value={this.state.price} readOnly />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"quantity\">Quantity:</Form.Label>\r\n                <Form.Control type=\"number\" name=\"quantity\" onChange={this.onChange} value={this.state.quantity} required />\r\n                <Form.Control.Feedback type=\"invalid\">The Quantity field is required</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" disabled={this.state.buttonDisabled} >\r\n                {this.state.isLoading ? <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\" /> : ''}\r\n                {this.state.isLoading ? ' Purchasing…' : 'Purchase'}\r\n            </Button>\r\n\r\n            <Alert style={{ marginTop: \"10px\" }} variant={this.state.alertColor} show={this.state.alertVisible}>\r\n                {this.state.alertMessage}\r\n            </Alert>\r\n        </Form>;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport PurchaseForm from './PurchaseForm';\r\nexport default class PurchaseModal extends Component\r\n{\r\n    state = {\r\n        modal: false\r\n    }\r\n    toggle = () =>\r\n    {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    }\r\n    render()\r\n    {\r\n        return <Fragment>\r\n            <Button variant=\"primary\" onClick={this.toggle}>Purchase</Button>\r\n            <Modal show={this.state.modal} className={this.props.className} onHide={this.toggle} size=\"sm\">\r\n                <Modal.Header closeButton>Purchase {this.props.item.name}</Modal.Header>\r\n                <Modal.Body>\r\n                    <PurchaseForm\r\n                        toggle={this.toggle}\r\n                        item={this.props.item}\r\n                        updateItemIntoState={this.props.updateItemIntoState} />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Col, Container, Row, Table, Form } from 'react-bootstrap';\r\nimport PurchaseModal from './form/PurchaseModal';\r\nimport authService from './api-authorization/AuthorizeService';\r\n\r\nexport class Store extends Component\r\n{\r\n  static displayName = Store.name;\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = { items: [], userOkubo: 0, loading: true, loadedSuccess: false };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.populateItems();\r\n  }\r\n\r\n  updateState = (id) =>\r\n  {\r\n    this.populateItems();\r\n  }\r\n\r\n  async populateItems()\r\n  {\r\n    const token = await authService.getAccessToken();\r\n    fetch(`${window.STORE_API_URL}`, {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => this.setState({ items: res.items, userOkubo: res.userOkubo, loading: false, loadedSuccess: true }))\r\n      .catch(err =>\r\n      {\r\n        console.log(err);\r\n        this.setState({ items: [], loading: false, loadedSuccess: false })\r\n      });\r\n  }\r\n\r\n  renderItemsTable(items)\r\n  {\r\n    return <Container style={{ paddingTop: \"10px\", paddingLeft: \"0px\" }}>\r\n      <Row className=\"align-items-center\">\r\n        <Col align='right' style={{ textAlign: \"right\", padding: \"0px\" }} >\r\n          <Form.Label style={{ margin: \"0px\" }}>My Okubo:</Form.Label>\r\n        </Col>\r\n        <Col xs={2}>\r\n          <Form.Control type=\"number\" name=\"okubo\" id=\"okubo\" value={this.state.userOkubo} style={{ textAlign: \"right\", padding: \"0px\" }} readOnly />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: \"5px\" }}>\r\n        <Col>\r\n          <Table striped>\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Price</th>\r\n                <th>Owned</th>\r\n                <th style={{ textAlign: \"center\" }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!items || items.length <= 0 ?\r\n                <tr>\r\n                  <td colSpan=\"6\" align=\"center\"><b>No Items yet</b></td>\r\n                </tr>\r\n                : items.map(item => (\r\n                  <tr key={item.id}>\r\n                    <td>\r\n                      {item.name}\r\n                    </td>\r\n                    <td>\r\n                      {item.description}\r\n                    </td>\r\n                    <td>\r\n                      {item.price}\r\n                    </td>\r\n                    <td>\r\n                      {item.ownedQuantity}\r\n                    </td>\r\n                    <td align=\"center\">\r\n                      <PurchaseModal\r\n                        item={item}\r\n                        updateItemIntoState={this.updateState} />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>;\r\n  }\r\n\r\n  render()\r\n  {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : this.state.loadedSuccess\r\n        ? this.renderItemsTable(this.state.items)\r\n        : <p>Could not load items</p>;\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Store Items</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthorizationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.props.path;\r\n        const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n        const redirectUrl = `${AuthorizationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, AuthorizationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<div>Processing login</div>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<div>Processing login callback</div>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<div></div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(window.IDENTITY_SERVICE_URL, `${AuthorizationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(AuthorizationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(window.IDENTITY_SERVICE_URL, AuthorizationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(host, apiAuthorizationPath) {\r\n        const redirectUrl = `${host}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, AuthorizationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<div>{message}</div>);\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<div>Processing logout</div>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<div>Processing logout callback</div>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"You successfully logged out!\" });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${AuthorizationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { AuthorizationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={AuthorizationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={AuthorizationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={AuthorizationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={AuthorizationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={AuthorizationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={AuthorizationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={AuthorizationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={AuthorizationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { Catalog } from './components/Catalog';\r\nimport { Inventory } from './components/Inventory';\r\nimport { Users } from './components/Users';\r\nimport { Store } from './components/Store';\r\nimport AuthorizeRoute from './components/api-authorization/AuthorizeRoute';\r\nimport ApiAuthorizationRoutes from './components/api-authorization/ApiAuthorizationRoutes';\r\nimport { AuthorizationPaths } from './components/api-authorization/ApiAuthorizationConstants';\r\nimport { ApplicationPaths } from './components/Constants';\r\n\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <AuthorizeRoute path={ApplicationPaths.CatalogPath} component={Catalog} />\r\n        <AuthorizeRoute path={ApplicationPaths.InventoryPath} component={Inventory} />\r\n        <AuthorizeRoute path={ApplicationPaths.UsersPath} component={Users} />\r\n        <AuthorizeRoute path={ApplicationPaths.StorePath} component={Store} />\r\n        <Route path={AuthorizationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}